<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20190119 12:28:06.250" rpa="false" generator="Rebot 3.1.1 (Python 3.5.6 on linux)">
<suite name="Robot Framework test run with Requests Library in parallel and generate random string test data using Robot Framwork's String library" id="s1">
<suite source="/rfw/Tests/Workshop-Part-Two/Docker-Example-Requests-Library1-Enhanced-Version.robot" name="Docker-Example-Requests-Library1-Enhanced-Version" id="s1-s1">
<test name="REQUESTS LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a PATCH request to &quot;userId&quot; for jsonplaceholder.typicode.com/posts/1 using randomized test data generated by built-in Robot Framework keywords and check the response." id="s1-s1-t1">
<kw name="Create Various Random Test Data With The String Library" library="SharedKeywordsAndListeners">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>30</arg>
</arguments>
<assign>
<var>${COMPLETELY_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190119 12:28:05.775" level="INFO">${COMPLETELY_RANDOM_STRING} = ymw63nbyB0y4em6BHZgx0D3edhuTGu</msg>
<status status="PASS" starttime="20190119 12:28:05.774" endtime="20190119 12:28:05.775"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>18</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${LOWERCASE_LETTERS_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190119 12:28:05.775" level="INFO">${LOWERCASE_LETTERS_RANDOM_STRING} = azvyniuvtbjtaheqhj</msg>
<status status="PASS" starttime="20190119 12:28:05.775" endtime="20190119 12:28:05.775"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>20</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190119 12:28:05.776" level="INFO">${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING} = mvJrNnyRRxFfkcbYuepK</msg>
<status status="PASS" starttime="20190119 12:28:05.776" endtime="20190119 12:28:05.776"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>aaaaaaaabbbbbb[NUMBERS]</arg>
</arguments>
<assign>
<var>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190119 12:28:05.777" level="INFO">${LETTERS_WITH_NUMBERS_RANDOM_STRING} = 1aa32b2bba</msg>
<status status="PASS" starttime="20190119 12:28:05.776" endtime="20190119 12:28:05.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190119 12:28:05.777" level="INFO">${COMPLETELY_RANDOM_STRING} = ymw63nbyB0y4em6BHZgx0D3edhuTGu</msg>
<status status="PASS" starttime="20190119 12:28:05.777" endtime="20190119 12:28:05.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LOWER_CASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190119 12:28:05.778" level="INFO">${LOWER_CASE_LETTERS_RANDOM_STRING} = azvyniuvtbjtaheqhj</msg>
<status status="PASS" starttime="20190119 12:28:05.778" endtime="20190119 12:28:05.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190119 12:28:05.779" level="INFO">${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING} = mvJrNnyRRxFfkcbYuepK</msg>
<status status="PASS" starttime="20190119 12:28:05.778" endtime="20190119 12:28:05.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190119 12:28:05.779" level="INFO">${LETTERS_WITH_NUMBERS_RANDOM_STRING} = 1aa32b2bba</msg>
<status status="PASS" starttime="20190119 12:28:05.779" endtime="20190119 12:28:05.779"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.780" endtime="20190119 12:28:05.780"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>COMPLETELY RANDOM STRING 30 CHARACTERS LONG...</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.781" endtime="20190119 12:28:05.781"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.782" endtime="20190119 12:28:05.782"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.783" endtime="20190119 12:28:05.783"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>LOWERCASE LETTERS RANDOM STRING 18 CHARACTERS LONG...</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.784" endtime="20190119 12:28:05.786"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LOWERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.786" endtime="20190119 12:28:05.787"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.787" endtime="20190119 12:28:05.788"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>LOWERCASE AND UPPERCASE LETTERS RANDOM STRING 20 CHARACTERS LONG...</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.789" endtime="20190119 12:28:05.790"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.790" endtime="20190119 12:28:05.790"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.791" endtime="20190119 12:28:05.791"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>RANDOM NUMBERS APPENDED TO LETTERS...</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.792" endtime="20190119 12:28:05.793"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.793" endtime="20190119 12:28:05.794"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.794" endtime="20190119 12:28:05.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190119 12:28:05.795" level="INFO">ymw63nbyB0y4em6BHZgx0D3edhuTGu</msg>
<status status="PASS" starttime="20190119 12:28:05.795" endtime="20190119 12:28:05.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LOWERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190119 12:28:05.796" level="INFO">azvyniuvtbjtaheqhj</msg>
<status status="PASS" starttime="20190119 12:28:05.795" endtime="20190119 12:28:05.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190119 12:28:05.796" level="INFO">mvJrNnyRRxFfkcbYuepK</msg>
<status status="PASS" starttime="20190119 12:28:05.796" endtime="20190119 12:28:05.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190119 12:28:05.797" level="INFO">1aa32b2bba</msg>
<status status="PASS" starttime="20190119 12:28:05.797" endtime="20190119 12:28:05.797"></status>
</kw>
<status status="PASS" starttime="20190119 12:28:05.773" endtime="20190119 12:28:05.797"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20190119 12:28:05.799" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190119 12:28:05.797" endtime="20190119 12:28:05.799"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20190119 12:28:05.799" level="INFO">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190119 12:28:05.799" endtime="20190119 12:28:05.800"></status>
</kw>
<kw name="Patch Request" library="RequestsLibrary">
<doc>Send a PATCH request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/1</arg>
<arg>data={"userId": ${COMPLETELY_RANDOM_STRING}}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20190119 12:28:05.912" level="INFO">Patch Request using : alias=jsonplaceholder, uri=/posts/1, data="{\"userId\": ymw63nbyB0y4em6BHZgx0D3edhuTGu}",                     headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190119 12:28:05.912" level="INFO">${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20190119 12:28:05.800" endtime="20190119 12:28:05.912"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.913" endtime="20190119 12:28:05.914"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.914" endtime="20190119 12:28:05.915"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.916" endtime="20190119 12:28:05.918"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.919" endtime="20190119 12:28:05.920"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.920" endtime="20190119 12:28:05.921"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.921" endtime="20190119 12:28:05.922"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.922" endtime="20190119 12:28:05.923"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190119 12:28:05.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190119 12:28:05.923" endtime="20190119 12:28:05.924"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20190119 12:28:05.772" critical="yes" endtime="20190119 12:28:05.924"></status>
</test>
<doc>Part Two of the robotframework-requests library examples has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add randomly generated data to a test through the "Create Various Random Test Data With The String Library" keyword.
This keyword turns the robotframework-requests library examples into an API fuzz testing tool that can run in serial or in parallel.</doc>
<status status="PASS" starttime="20190119 12:28:05.596" endtime="20190119 12:28:05.929"></status>
</suite>
<suite source="/rfw/Tests/Workshop-Part-Two/Docker-Example-Requests-Library2-Enhanced-Version.robot" name="Docker-Example-Requests-Library2-Enhanced-Version" id="s1-s2">
<test name="REQUESTS LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PUT request to jsonplaceholder.typicode.com/posts using randomized test data generated by built-in Robot Framework keywords and check the response." id="s1-s2-t1">
<kw name="Create Various Random Test Data With The String Library" library="SharedKeywordsAndListeners">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>30</arg>
</arguments>
<assign>
<var>${COMPLETELY_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190119 12:28:05.758" level="INFO">${COMPLETELY_RANDOM_STRING} = D8KiSp3h8xMcwAIXKpIdownXidn42O</msg>
<status status="PASS" starttime="20190119 12:28:05.757" endtime="20190119 12:28:05.758"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>18</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${LOWERCASE_LETTERS_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190119 12:28:05.758" level="INFO">${LOWERCASE_LETTERS_RANDOM_STRING} = dlzgmnxoeogvccprpx</msg>
<status status="PASS" starttime="20190119 12:28:05.758" endtime="20190119 12:28:05.759"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>20</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190119 12:28:05.759" level="INFO">${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING} = HwmOiBPPslhzDQBGmXdl</msg>
<status status="PASS" starttime="20190119 12:28:05.759" endtime="20190119 12:28:05.759"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>aaaaaaaabbbbbb[NUMBERS]</arg>
</arguments>
<assign>
<var>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190119 12:28:05.760" level="INFO">${LETTERS_WITH_NUMBERS_RANDOM_STRING} = 43ba0a5aaa</msg>
<status status="PASS" starttime="20190119 12:28:05.759" endtime="20190119 12:28:05.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190119 12:28:05.760" level="INFO">${COMPLETELY_RANDOM_STRING} = D8KiSp3h8xMcwAIXKpIdownXidn42O</msg>
<status status="PASS" starttime="20190119 12:28:05.760" endtime="20190119 12:28:05.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LOWER_CASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190119 12:28:05.761" level="INFO">${LOWER_CASE_LETTERS_RANDOM_STRING} = dlzgmnxoeogvccprpx</msg>
<status status="PASS" starttime="20190119 12:28:05.761" endtime="20190119 12:28:05.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190119 12:28:05.762" level="INFO">${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING} = HwmOiBPPslhzDQBGmXdl</msg>
<status status="PASS" starttime="20190119 12:28:05.761" endtime="20190119 12:28:05.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190119 12:28:05.762" level="INFO">${LETTERS_WITH_NUMBERS_RANDOM_STRING} = 43ba0a5aaa</msg>
<status status="PASS" starttime="20190119 12:28:05.762" endtime="20190119 12:28:05.762"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.763" endtime="20190119 12:28:05.763"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>COMPLETELY RANDOM STRING 30 CHARACTERS LONG...</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.764" endtime="20190119 12:28:05.765"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.766" endtime="20190119 12:28:05.767"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.767" endtime="20190119 12:28:05.768"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>LOWERCASE LETTERS RANDOM STRING 18 CHARACTERS LONG...</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.768" endtime="20190119 12:28:05.769"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LOWERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.769" endtime="20190119 12:28:05.770"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.770" endtime="20190119 12:28:05.771"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>LOWERCASE AND UPPERCASE LETTERS RANDOM STRING 20 CHARACTERS LONG...</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.771" endtime="20190119 12:28:05.772"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.772" endtime="20190119 12:28:05.773"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.773" endtime="20190119 12:28:05.773"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>RANDOM NUMBERS APPENDED TO LETTERS...</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.774" endtime="20190119 12:28:05.774"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.774" endtime="20190119 12:28:05.775"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.775" endtime="20190119 12:28:05.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190119 12:28:05.776" level="INFO">D8KiSp3h8xMcwAIXKpIdownXidn42O</msg>
<status status="PASS" starttime="20190119 12:28:05.776" endtime="20190119 12:28:05.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LOWERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190119 12:28:05.777" level="INFO">dlzgmnxoeogvccprpx</msg>
<status status="PASS" starttime="20190119 12:28:05.777" endtime="20190119 12:28:05.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190119 12:28:05.777" level="INFO">HwmOiBPPslhzDQBGmXdl</msg>
<status status="PASS" starttime="20190119 12:28:05.777" endtime="20190119 12:28:05.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190119 12:28:05.778" level="INFO">43ba0a5aaa</msg>
<status status="PASS" starttime="20190119 12:28:05.778" endtime="20190119 12:28:05.778"></status>
</kw>
<status status="PASS" starttime="20190119 12:28:05.757" endtime="20190119 12:28:05.778"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20190119 12:28:05.780" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190119 12:28:05.779" endtime="20190119 12:28:05.780"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20190119 12:28:05.781" level="INFO">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190119 12:28:05.780" endtime="20190119 12:28:05.782"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</var>
</assign>
<msg timestamp="20190119 12:28:05.917" level="INFO">Put Request using : alias=jsonplaceholder, uri=/posts/D8KiSp3h8xMcwAIXKpIdownXidn42O, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190119 12:28:05.917" level="INFO">${REQUESTS_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20190119 12:28:05.782" endtime="20190119 12:28:05.917"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.918" endtime="20190119 12:28:05.919"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.919" endtime="20190119 12:28:05.920"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.920" endtime="20190119 12:28:05.921"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.921" endtime="20190119 12:28:05.922"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.922" endtime="20190119 12:28:05.923"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.923" endtime="20190119 12:28:05.924"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190119 12:28:05.925" endtime="20190119 12:28:05.926"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190119 12:28:05.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190119 12:28:05.926" endtime="20190119 12:28:05.926"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20190119 12:28:05.755" critical="yes" endtime="20190119 12:28:05.927"></status>
</test>
<doc>Part Two of the robotframework-requests library examples has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add randomly generated data to a test through the "Create Various Random Test Data With The String Library" keyword.
This keyword turns the robotframework-requests library examples into an API fuzz testing tool that can run in serial or in parallel.</doc>
<status status="PASS" starttime="20190119 12:28:05.596" endtime="20190119 12:28:05.929"></status>
</suite>
<status status="PASS" starttime="20190119 12:28:05.561" endtime="20190119 12:28:05.933"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="2">Regression_Tests</stat>
<stat fail="0" pass="2">Slightly_Refined_And_Room_For_Enhancements</stat>
</tag>
<suite>
<stat name="Robot Framework test run with Requests Library in parallel and generate random string test data using Robot Framwork's String library" id="s1" fail="0" pass="2">Robot Framework test run with Requests Library in parallel and generate random string test data using Robot Framwork's String library</stat>
<stat name="Docker-Example-Requests-Library1-Enhanced-Version" id="s1-s1" fail="0" pass="1">Robot Framework test run with Requests Library in parallel and generate random string test data using Robot Framwork's String library.Docker-Example-Requests-Library1-Enhanced-Version</stat>
<stat name="Docker-Example-Requests-Library2-Enhanced-Version" id="s1-s2" fail="0" pass="1">Robot Framework test run with Requests Library in parallel and generate random string test data using Robot Framwork's String library.Docker-Example-Requests-Library2-Enhanced-Version</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
