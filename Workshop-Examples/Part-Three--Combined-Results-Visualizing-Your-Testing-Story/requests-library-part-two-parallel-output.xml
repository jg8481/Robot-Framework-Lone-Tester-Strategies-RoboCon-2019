<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 3.1.1 (Python 3.5.6 on linux)" rpa="false" generated="20190116 12:43:59.321">
<suite id="s1" name="Robot Framework test run with Requests Library in parallel and generate random string test data using Robot Framwork's String library">
<suite id="s1-s1" source="/rfw/Tests/Part-Two--RFW-Strategies-For-Enhancing-Existing-Tests-And-Taking-Your-Test-Process-Further/Docker-Example-Requests-Library1-Enhanced-Version.robot" name="Docker-Example-Requests-Library1-Enhanced-Version">
<test id="s1-s1-t1" name="REQUESTS LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a PATCH request to &quot;userId&quot; for jsonplaceholder.typicode.com/posts/1 using randomized test data generated by built-in Robot Framework keywords and check the response.">
<kw library="SharedKeywordsAndListeners" name="Create Various Random Test Data With The String Library">
<kw library="String" name="Generate Random String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>30</arg>
</arguments>
<assign>
<var>${COMPLETELY_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190116 12:43:58.533" level="INFO">${COMPLETELY_RANDOM_STRING} = BuPkh1lnYbXjUDJUU1s623IEeL6TrH</msg>
<status starttime="20190116 12:43:58.533" endtime="20190116 12:43:58.533" status="PASS"></status>
</kw>
<kw library="String" name="Generate Random String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>18</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${LOWERCASE_LETTERS_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190116 12:43:58.534" level="INFO">${LOWERCASE_LETTERS_RANDOM_STRING} = cxeuxjopnirfdlfvxg</msg>
<status starttime="20190116 12:43:58.534" endtime="20190116 12:43:58.534" status="PASS"></status>
</kw>
<kw library="String" name="Generate Random String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>20</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190116 12:43:58.535" level="INFO">${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING} = sGkNXewvwnEUUDTvApcL</msg>
<status starttime="20190116 12:43:58.534" endtime="20190116 12:43:58.535" status="PASS"></status>
</kw>
<kw library="String" name="Generate Random String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>aaaaaaaabbbbbb[NUMBERS]</arg>
</arguments>
<assign>
<var>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190116 12:43:58.535" level="INFO">${LETTERS_WITH_NUMBERS_RANDOM_STRING} = bb7ab2abab</msg>
<status starttime="20190116 12:43:58.535" endtime="20190116 12:43:58.535" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190116 12:43:58.536" level="INFO">${COMPLETELY_RANDOM_STRING} = BuPkh1lnYbXjUDJUU1s623IEeL6TrH</msg>
<status starttime="20190116 12:43:58.535" endtime="20190116 12:43:58.536" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LOWER_CASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190116 12:43:58.536" level="INFO">${LOWER_CASE_LETTERS_RANDOM_STRING} = cxeuxjopnirfdlfvxg</msg>
<status starttime="20190116 12:43:58.536" endtime="20190116 12:43:58.537" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190116 12:43:58.537" level="INFO">${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING} = sGkNXewvwnEUUDTvApcL</msg>
<status starttime="20190116 12:43:58.537" endtime="20190116 12:43:58.537" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190116 12:43:58.538" level="INFO">${LETTERS_WITH_NUMBERS_RANDOM_STRING} = bb7ab2abab</msg>
<status starttime="20190116 12:43:58.537" endtime="20190116 12:43:58.538" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190116 12:43:58.538" endtime="20190116 12:43:58.539" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>COMPLETELY RANDOM STRING 30 CHARACTERS LONG...</arg>
</arguments>
<status starttime="20190116 12:43:58.539" endtime="20190116 12:43:58.540" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190116 12:43:58.540" endtime="20190116 12:43:58.541" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190116 12:43:58.541" endtime="20190116 12:43:58.542" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>LOWERCASE LETTERS RANDOM STRING 18 CHARACTERS LONG...</arg>
</arguments>
<status starttime="20190116 12:43:58.542" endtime="20190116 12:43:58.543" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LOWERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190116 12:43:58.543" endtime="20190116 12:43:58.544" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190116 12:43:58.544" endtime="20190116 12:43:58.545" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>LOWERCASE AND UPPERCASE LETTERS RANDOM STRING 20 CHARACTERS LONG...</arg>
</arguments>
<status starttime="20190116 12:43:58.545" endtime="20190116 12:43:58.546" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190116 12:43:58.546" endtime="20190116 12:43:58.547" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190116 12:43:58.547" endtime="20190116 12:43:58.548" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>RANDOM NUMBERS APPENDED TO LETTERS...</arg>
</arguments>
<status starttime="20190116 12:43:58.548" endtime="20190116 12:43:58.549" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190116 12:43:58.549" endtime="20190116 12:43:58.550" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190116 12:43:58.550" endtime="20190116 12:43:58.550" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190116 12:43:58.551" level="INFO">BuPkh1lnYbXjUDJUU1s623IEeL6TrH</msg>
<status starttime="20190116 12:43:58.551" endtime="20190116 12:43:58.551" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LOWERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190116 12:43:58.552" level="INFO">cxeuxjopnirfdlfvxg</msg>
<status starttime="20190116 12:43:58.551" endtime="20190116 12:43:58.552" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190116 12:43:58.552" level="INFO">sGkNXewvwnEUUDTvApcL</msg>
<status starttime="20190116 12:43:58.552" endtime="20190116 12:43:58.552" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190116 12:43:58.553" level="INFO">bb7ab2abab</msg>
<status starttime="20190116 12:43:58.553" endtime="20190116 12:43:58.553" status="PASS"></status>
</kw>
<status starttime="20190116 12:43:58.532" endtime="20190116 12:43:58.553" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20190116 12:43:58.555" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status starttime="20190116 12:43:58.553" endtime="20190116 12:43:58.555" status="PASS"></status>
</kw>
<kw library="RequestsLibrary" name="Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20190116 12:43:58.555" level="INFO">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status starttime="20190116 12:43:58.555" endtime="20190116 12:43:58.556" status="PASS"></status>
</kw>
<kw library="RequestsLibrary" name="Patch Request">
<doc>Send a PATCH request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/1</arg>
<arg>data={"userId": ${COMPLETELY_RANDOM_STRING}}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20190116 12:43:58.896" level="INFO">Patch Request using : alias=jsonplaceholder, uri=/posts/1, data="{\"userId\": BuPkh1lnYbXjUDJUU1s623IEeL6TrH}",                     headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190116 12:43:58.896" level="INFO">${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE} = &lt;Response [500]&gt;</msg>
<status starttime="20190116 12:43:58.556" endtime="20190116 12:43:58.897" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:58.897" endtime="20190116 12:43:58.898" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:58.898" endtime="20190116 12:43:58.899" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:58.900" endtime="20190116 12:43:58.901" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</arg>
</arguments>
<status starttime="20190116 12:43:58.901" endtime="20190116 12:43:58.902" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:58.902" endtime="20190116 12:43:58.903" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:58.903" endtime="20190116 12:43:58.904" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:58.904" endtime="20190116 12:43:58.905" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Not Be Equal As Strings">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190116 12:43:58.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20190116 12:43:58.905" endtime="20190116 12:43:58.906" status="PASS"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status critical="yes" starttime="20190116 12:43:58.531" endtime="20190116 12:43:58.906" status="PASS"></status>
</test>
<doc>Part Two of the robotframework-requests library examples has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add randomly generated data to a test through the "Create Various Random Test Data With The String Library" keyword.
This keyword turns the robotframework-requests library examples into an API fuzz testing tool that can run in serial or in parallel.</doc>
<status starttime="20190116 12:43:58.380" endtime="20190116 12:43:58.908" status="PASS"></status>
</suite>
<suite id="s1-s2" source="/rfw/Tests/Part-Two--RFW-Strategies-For-Enhancing-Existing-Tests-And-Taking-Your-Test-Process-Further/Docker-Example-Requests-Library2-Enhanced-Version.robot" name="Docker-Example-Requests-Library2-Enhanced-Version">
<test id="s1-s2-t1" name="REQUESTS LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PUT request to jsonplaceholder.typicode.com/posts using randomized test data generated by built-in Robot Framework keywords and check the response.">
<kw library="SharedKeywordsAndListeners" name="Create Various Random Test Data With The String Library">
<kw library="String" name="Generate Random String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>30</arg>
</arguments>
<assign>
<var>${COMPLETELY_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190116 12:43:58.533" level="INFO">${COMPLETELY_RANDOM_STRING} = zA0F5piAbRRAqReBGIYePtb8zTNsjJ</msg>
<status starttime="20190116 12:43:58.533" endtime="20190116 12:43:58.533" status="PASS"></status>
</kw>
<kw library="String" name="Generate Random String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>18</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${LOWERCASE_LETTERS_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190116 12:43:58.534" level="INFO">${LOWERCASE_LETTERS_RANDOM_STRING} = abfdsdudrrgbtogkeb</msg>
<status starttime="20190116 12:43:58.534" endtime="20190116 12:43:58.534" status="PASS"></status>
</kw>
<kw library="String" name="Generate Random String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>20</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190116 12:43:58.535" level="INFO">${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING} = XIuETJZTaMIBaIfVaZWl</msg>
<status starttime="20190116 12:43:58.534" endtime="20190116 12:43:58.535" status="PASS"></status>
</kw>
<kw library="String" name="Generate Random String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>aaaaaaaabbbbbb[NUMBERS]</arg>
</arguments>
<assign>
<var>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190116 12:43:58.535" level="INFO">${LETTERS_WITH_NUMBERS_RANDOM_STRING} = 3ba728bbbb</msg>
<status starttime="20190116 12:43:58.535" endtime="20190116 12:43:58.535" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190116 12:43:58.536" level="INFO">${COMPLETELY_RANDOM_STRING} = zA0F5piAbRRAqReBGIYePtb8zTNsjJ</msg>
<status starttime="20190116 12:43:58.535" endtime="20190116 12:43:58.536" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LOWER_CASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190116 12:43:58.536" level="INFO">${LOWER_CASE_LETTERS_RANDOM_STRING} = abfdsdudrrgbtogkeb</msg>
<status starttime="20190116 12:43:58.536" endtime="20190116 12:43:58.537" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190116 12:43:58.537" level="INFO">${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING} = XIuETJZTaMIBaIfVaZWl</msg>
<status starttime="20190116 12:43:58.537" endtime="20190116 12:43:58.537" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190116 12:43:58.538" level="INFO">${LETTERS_WITH_NUMBERS_RANDOM_STRING} = 3ba728bbbb</msg>
<status starttime="20190116 12:43:58.537" endtime="20190116 12:43:58.538" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190116 12:43:58.538" endtime="20190116 12:43:58.539" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>COMPLETELY RANDOM STRING 30 CHARACTERS LONG...</arg>
</arguments>
<status starttime="20190116 12:43:58.539" endtime="20190116 12:43:58.540" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190116 12:43:58.540" endtime="20190116 12:43:58.541" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190116 12:43:58.541" endtime="20190116 12:43:58.542" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>LOWERCASE LETTERS RANDOM STRING 18 CHARACTERS LONG...</arg>
</arguments>
<status starttime="20190116 12:43:58.542" endtime="20190116 12:43:58.543" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LOWERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190116 12:43:58.543" endtime="20190116 12:43:58.544" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190116 12:43:58.544" endtime="20190116 12:43:58.545" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>LOWERCASE AND UPPERCASE LETTERS RANDOM STRING 20 CHARACTERS LONG...</arg>
</arguments>
<status starttime="20190116 12:43:58.545" endtime="20190116 12:43:58.546" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190116 12:43:58.546" endtime="20190116 12:43:58.547" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190116 12:43:58.547" endtime="20190116 12:43:58.548" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>RANDOM NUMBERS APPENDED TO LETTERS...</arg>
</arguments>
<status starttime="20190116 12:43:58.548" endtime="20190116 12:43:58.549" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190116 12:43:58.549" endtime="20190116 12:43:58.550" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190116 12:43:58.550" endtime="20190116 12:43:58.551" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190116 12:43:58.551" level="INFO">zA0F5piAbRRAqReBGIYePtb8zTNsjJ</msg>
<status starttime="20190116 12:43:58.551" endtime="20190116 12:43:58.551" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LOWERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190116 12:43:58.552" level="INFO">abfdsdudrrgbtogkeb</msg>
<status starttime="20190116 12:43:58.552" endtime="20190116 12:43:58.552" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190116 12:43:58.552" level="INFO">XIuETJZTaMIBaIfVaZWl</msg>
<status starttime="20190116 12:43:58.552" endtime="20190116 12:43:58.552" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190116 12:43:58.553" level="INFO">3ba728bbbb</msg>
<status starttime="20190116 12:43:58.553" endtime="20190116 12:43:58.553" status="PASS"></status>
</kw>
<status starttime="20190116 12:43:58.532" endtime="20190116 12:43:58.553" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20190116 12:43:58.555" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status starttime="20190116 12:43:58.553" endtime="20190116 12:43:58.555" status="PASS"></status>
</kw>
<kw library="RequestsLibrary" name="Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20190116 12:43:58.555" level="INFO">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status starttime="20190116 12:43:58.555" endtime="20190116 12:43:58.556" status="PASS"></status>
</kw>
<kw library="RequestsLibrary" name="Put Request">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</var>
</assign>
<msg timestamp="20190116 12:43:58.972" level="INFO">Put Request using : alias=jsonplaceholder, uri=/posts/zA0F5piAbRRAqReBGIYePtb8zTNsjJ, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190116 12:43:58.972" level="INFO">${REQUESTS_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE} = &lt;Response [500]&gt;</msg>
<status starttime="20190116 12:43:58.556" endtime="20190116 12:43:58.972" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:58.973" endtime="20190116 12:43:58.974" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:58.975" endtime="20190116 12:43:58.976" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:58.976" endtime="20190116 12:43:58.977" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</arg>
</arguments>
<status starttime="20190116 12:43:58.977" endtime="20190116 12:43:58.979" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:58.979" endtime="20190116 12:43:58.980" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:58.981" endtime="20190116 12:43:58.982" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:58.982" endtime="20190116 12:43:58.983" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Not Be Equal As Strings">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190116 12:43:58.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20190116 12:43:58.983" endtime="20190116 12:43:58.984" status="PASS"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status critical="yes" starttime="20190116 12:43:58.531" endtime="20190116 12:43:58.984" status="PASS"></status>
</test>
<doc>Part Two of the robotframework-requests library examples has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add randomly generated data to a test through the "Create Various Random Test Data With The String Library" keyword.
This keyword turns the robotframework-requests library examples into an API fuzz testing tool that can run in serial or in parallel.</doc>
<status starttime="20190116 12:43:58.385" endtime="20190116 12:43:58.986" status="PASS"></status>
</suite>
<status starttime="20190116 12:43:58.340" endtime="20190116 12:43:58.990" status="PASS"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="2">Regression_Tests</stat>
<stat fail="0" pass="2">Slightly_Refined_And_Room_For_Enhancements</stat>
</tag>
<suite>
<stat fail="0" id="s1" pass="2" name="Robot Framework test run with Requests Library in parallel and generate random string test data using Robot Framwork's String library">Robot Framework test run with Requests Library in parallel and generate random string test data using Robot Framwork's String library</stat>
<stat fail="0" id="s1-s1" pass="1" name="Docker-Example-Requests-Library1-Enhanced-Version">Robot Framework test run with Requests Library in parallel and generate random string test data using Robot Framwork's String library.Docker-Example-Requests-Library1-Enhanced-Version</stat>
<stat fail="0" id="s1-s2" pass="1" name="Docker-Example-Requests-Library2-Enhanced-Version">Robot Framework test run with Requests Library in parallel and generate random string test data using Robot Framwork's String library.Docker-Example-Requests-Library2-Enhanced-Version</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
