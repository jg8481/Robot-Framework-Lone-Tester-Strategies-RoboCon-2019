<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 3.1.1 (Python 3.5.6 on linux)" generated="20190115 16:48:16.936" rpa="false">
<suite id="s1" name="Robot Framework test run with Requests Library in parallel and generate random string test data using Robot Framwork's String library">
<suite id="s1-s1" name="Docker-Example-Requests-Library1-Enhanced-Version" source="/rfw/Tests/Part-Two--RFW-Strategies-For-Enhancing-Existing-Tests-And-Taking-Your-Test-Process-Further/Docker-Example-Requests-Library1-Enhanced-Version.robot">
<test id="s1-s1-t1" name="REQUESTS LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a PATCH request to &quot;userId&quot; for jsonplaceholder.typicode.com/posts/1 using randomized test data generated by built-in Robot Framework keywords and check the response.">
<kw library="SharedKeywordsAndListeners" name="Create Various Random Test Data With The String Library">
<kw library="String" name="Generate Random String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>30</arg>
</arguments>
<assign>
<var>${COMPLETELY_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190115 16:48:16.132" level="INFO">${COMPLETELY_RANDOM_STRING} = LXcRPqmdqon7d5ekeEIScizoobpLpY</msg>
<status status="PASS" starttime="20190115 16:48:16.132" endtime="20190115 16:48:16.132"></status>
</kw>
<kw library="String" name="Generate Random String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>18</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${LOWERCASE_LETTERS_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190115 16:48:16.133" level="INFO">${LOWERCASE_LETTERS_RANDOM_STRING} = djsslrvnzlqksnysyv</msg>
<status status="PASS" starttime="20190115 16:48:16.132" endtime="20190115 16:48:16.133"></status>
</kw>
<kw library="String" name="Generate Random String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>20</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190115 16:48:16.133" level="INFO">${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING} = wJUWPCVnrNsGLvmHhhBc</msg>
<status status="PASS" starttime="20190115 16:48:16.133" endtime="20190115 16:48:16.133"></status>
</kw>
<kw library="String" name="Generate Random String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>aaaaaaaabbbbbb[NUMBERS]</arg>
</arguments>
<assign>
<var>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190115 16:48:16.134" level="INFO">${LETTERS_WITH_NUMBERS_RANDOM_STRING} = ba9a28921a</msg>
<status status="PASS" starttime="20190115 16:48:16.134" endtime="20190115 16:48:16.134"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190115 16:48:16.134" level="INFO">${COMPLETELY_RANDOM_STRING} = LXcRPqmdqon7d5ekeEIScizoobpLpY</msg>
<status status="PASS" starttime="20190115 16:48:16.134" endtime="20190115 16:48:16.135"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LOWER_CASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190115 16:48:16.135" level="INFO">${LOWER_CASE_LETTERS_RANDOM_STRING} = djsslrvnzlqksnysyv</msg>
<status status="PASS" starttime="20190115 16:48:16.135" endtime="20190115 16:48:16.135"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190115 16:48:16.136" level="INFO">${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING} = wJUWPCVnrNsGLvmHhhBc</msg>
<status status="PASS" starttime="20190115 16:48:16.135" endtime="20190115 16:48:16.136"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190115 16:48:16.136" level="INFO">${LETTERS_WITH_NUMBERS_RANDOM_STRING} = ba9a28921a</msg>
<status status="PASS" starttime="20190115 16:48:16.136" endtime="20190115 16:48:16.136"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.136" endtime="20190115 16:48:16.137"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>COMPLETELY RANDOM STRING 30 CHARACTERS LONG...</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.137" endtime="20190115 16:48:16.138"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.138" endtime="20190115 16:48:16.139"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.139" endtime="20190115 16:48:16.140"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>LOWERCASE LETTERS RANDOM STRING 18 CHARACTERS LONG...</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.140" endtime="20190115 16:48:16.141"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LOWERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.141" endtime="20190115 16:48:16.143"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.143" endtime="20190115 16:48:16.144"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>LOWERCASE AND UPPERCASE LETTERS RANDOM STRING 20 CHARACTERS LONG...</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.144" endtime="20190115 16:48:16.144"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.145" endtime="20190115 16:48:16.145"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.146" endtime="20190115 16:48:16.146"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>RANDOM NUMBERS APPENDED TO LETTERS...</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.146" endtime="20190115 16:48:16.147"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.147" endtime="20190115 16:48:16.148"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.148" endtime="20190115 16:48:16.149"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190115 16:48:16.149" level="INFO">LXcRPqmdqon7d5ekeEIScizoobpLpY</msg>
<status status="PASS" starttime="20190115 16:48:16.149" endtime="20190115 16:48:16.149"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LOWERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190115 16:48:16.150" level="INFO">djsslrvnzlqksnysyv</msg>
<status status="PASS" starttime="20190115 16:48:16.150" endtime="20190115 16:48:16.150"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190115 16:48:16.150" level="INFO">wJUWPCVnrNsGLvmHhhBc</msg>
<status status="PASS" starttime="20190115 16:48:16.150" endtime="20190115 16:48:16.150"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190115 16:48:16.151" level="INFO">ba9a28921a</msg>
<status status="PASS" starttime="20190115 16:48:16.150" endtime="20190115 16:48:16.151"></status>
</kw>
<status status="PASS" starttime="20190115 16:48:16.131" endtime="20190115 16:48:16.151"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20190115 16:48:16.152" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190115 16:48:16.151" endtime="20190115 16:48:16.152"></status>
</kw>
<kw library="RequestsLibrary" name="Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20190115 16:48:16.153" level="INFO">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190115 16:48:16.152" endtime="20190115 16:48:16.153"></status>
</kw>
<kw library="RequestsLibrary" name="Patch Request">
<doc>Send a PATCH request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/1</arg>
<arg>data={"userId": ${COMPLETELY_RANDOM_STRING}}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20190115 16:48:16.582" level="INFO">Patch Request using : alias=jsonplaceholder, uri=/posts/1, data="{\"userId\": LXcRPqmdqon7d5ekeEIScizoobpLpY}",                     headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190115 16:48:16.582" level="INFO">${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20190115 16:48:16.153" endtime="20190115 16:48:16.582"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.583" endtime="20190115 16:48:16.584"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.584" endtime="20190115 16:48:16.585"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.586" endtime="20190115 16:48:16.587"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.587" endtime="20190115 16:48:16.588"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.588" endtime="20190115 16:48:16.589"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.589" endtime="20190115 16:48:16.590"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.590" endtime="20190115 16:48:16.591"></status>
</kw>
<kw library="BuiltIn" name="Should Not Be Equal As Strings">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190115 16:48:16.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190115 16:48:16.591" endtime="20190115 16:48:16.592"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190115 16:48:16.129" endtime="20190115 16:48:16.592"></status>
</test>
<doc>Part Two of the robotframework-requests library examples has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add randomly generated data to a test through the "Create Various Random Test Data With The String Library" keyword.
This keyword turns the robotframework-requests library examples into an API fuzz testing tool that can run in serial or in parallel.</doc>
<status status="PASS" starttime="20190115 16:48:15.987" endtime="20190115 16:48:16.594"></status>
</suite>
<suite id="s1-s2" name="Docker-Example-Requests-Library2-Enhanced-Version" source="/rfw/Tests/Part-Two--RFW-Strategies-For-Enhancing-Existing-Tests-And-Taking-Your-Test-Process-Further/Docker-Example-Requests-Library2-Enhanced-Version.robot">
<test id="s1-s2-t1" name="REQUESTS LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PUT request to jsonplaceholder.typicode.com/posts using randomized test data generated by built-in Robot Framework keywords and check the response.">
<kw library="SharedKeywordsAndListeners" name="Create Various Random Test Data With The String Library">
<kw library="String" name="Generate Random String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>30</arg>
</arguments>
<assign>
<var>${COMPLETELY_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190115 16:48:16.132" level="INFO">${COMPLETELY_RANDOM_STRING} = 2qlbquA26tlAbfya63o2gx2n99Dno9</msg>
<status status="PASS" starttime="20190115 16:48:16.132" endtime="20190115 16:48:16.133"></status>
</kw>
<kw library="String" name="Generate Random String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>18</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${LOWERCASE_LETTERS_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190115 16:48:16.133" level="INFO">${LOWERCASE_LETTERS_RANDOM_STRING} = biyzyfcyxmtawqpziz</msg>
<status status="PASS" starttime="20190115 16:48:16.133" endtime="20190115 16:48:16.133"></status>
</kw>
<kw library="String" name="Generate Random String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>20</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190115 16:48:16.133" level="INFO">${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING} = wJtJjPYoEKdgjzNTQpPI</msg>
<status status="PASS" starttime="20190115 16:48:16.133" endtime="20190115 16:48:16.134"></status>
</kw>
<kw library="String" name="Generate Random String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>aaaaaaaabbbbbb[NUMBERS]</arg>
</arguments>
<assign>
<var>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</var>
</assign>
<msg timestamp="20190115 16:48:16.134" level="INFO">${LETTERS_WITH_NUMBERS_RANDOM_STRING} = b32bb5aaba</msg>
<status status="PASS" starttime="20190115 16:48:16.134" endtime="20190115 16:48:16.134"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190115 16:48:16.135" level="INFO">${COMPLETELY_RANDOM_STRING} = 2qlbquA26tlAbfya63o2gx2n99Dno9</msg>
<status status="PASS" starttime="20190115 16:48:16.134" endtime="20190115 16:48:16.135"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LOWER_CASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190115 16:48:16.135" level="INFO">${LOWER_CASE_LETTERS_RANDOM_STRING} = biyzyfcyxmtawqpziz</msg>
<status status="PASS" starttime="20190115 16:48:16.135" endtime="20190115 16:48:16.135"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190115 16:48:16.136" level="INFO">${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING} = wJtJjPYoEKdgjzNTQpPI</msg>
<status status="PASS" starttime="20190115 16:48:16.135" endtime="20190115 16:48:16.136"></status>
</kw>
<kw library="BuiltIn" name="Set Suite Variable">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190115 16:48:16.136" level="INFO">${LETTERS_WITH_NUMBERS_RANDOM_STRING} = b32bb5aaba</msg>
<status status="PASS" starttime="20190115 16:48:16.136" endtime="20190115 16:48:16.136"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.136" endtime="20190115 16:48:16.137"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>COMPLETELY RANDOM STRING 30 CHARACTERS LONG...</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.137" endtime="20190115 16:48:16.138"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.138" endtime="20190115 16:48:16.139"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.139" endtime="20190115 16:48:16.140"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>LOWERCASE LETTERS RANDOM STRING 18 CHARACTERS LONG...</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.140" endtime="20190115 16:48:16.141"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LOWERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.141" endtime="20190115 16:48:16.143"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.143" endtime="20190115 16:48:16.143"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>LOWERCASE AND UPPERCASE LETTERS RANDOM STRING 20 CHARACTERS LONG...</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.144" endtime="20190115 16:48:16.144"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.145" endtime="20190115 16:48:16.145"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.146" endtime="20190115 16:48:16.146"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>RANDOM NUMBERS APPENDED TO LETTERS...</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.146" endtime="20190115 16:48:16.147"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.147" endtime="20190115 16:48:16.148"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.148" endtime="20190115 16:48:16.149"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190115 16:48:16.149" level="INFO">2qlbquA26tlAbfya63o2gx2n99Dno9</msg>
<status status="PASS" starttime="20190115 16:48:16.149" endtime="20190115 16:48:16.149"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LOWERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190115 16:48:16.150" level="INFO">biyzyfcyxmtawqpziz</msg>
<status status="PASS" starttime="20190115 16:48:16.150" endtime="20190115 16:48:16.150"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190115 16:48:16.150" level="INFO">wJtJjPYoEKdgjzNTQpPI</msg>
<status status="PASS" starttime="20190115 16:48:16.150" endtime="20190115 16:48:16.150"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<msg timestamp="20190115 16:48:16.151" level="INFO">b32bb5aaba</msg>
<status status="PASS" starttime="20190115 16:48:16.150" endtime="20190115 16:48:16.151"></status>
</kw>
<status status="PASS" starttime="20190115 16:48:16.131" endtime="20190115 16:48:16.151"></status>
</kw>
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20190115 16:48:16.152" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20190115 16:48:16.151" endtime="20190115 16:48:16.152"></status>
</kw>
<kw library="RequestsLibrary" name="Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20190115 16:48:16.153" level="INFO">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190115 16:48:16.152" endtime="20190115 16:48:16.153"></status>
</kw>
<kw library="RequestsLibrary" name="Put Request">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</var>
</assign>
<msg timestamp="20190115 16:48:16.653" level="INFO">Put Request using : alias=jsonplaceholder, uri=/posts/2qlbquA26tlAbfya63o2gx2n99Dno9, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190115 16:48:16.653" level="INFO">${REQUESTS_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20190115 16:48:16.153" endtime="20190115 16:48:16.653"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.653" endtime="20190115 16:48:16.654"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.654" endtime="20190115 16:48:16.655"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.655" endtime="20190115 16:48:16.656"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.656" endtime="20190115 16:48:16.657"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.657" endtime="20190115 16:48:16.658"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.658" endtime="20190115 16:48:16.659"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20190115 16:48:16.659" endtime="20190115 16:48:16.660"></status>
</kw>
<kw library="BuiltIn" name="Should Not Be Equal As Strings">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190115 16:48:16.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190115 16:48:16.660" endtime="20190115 16:48:16.661"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190115 16:48:16.129" endtime="20190115 16:48:16.661"></status>
</test>
<doc>Part Two of the robotframework-requests library examples has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add randomly generated data to a test through the "Create Various Random Test Data With The String Library" keyword.
This keyword turns the robotframework-requests library examples into an API fuzz testing tool that can run in serial or in parallel.</doc>
<status status="PASS" starttime="20190115 16:48:15.981" endtime="20190115 16:48:16.663"></status>
</suite>
<status status="PASS" starttime="20190115 16:48:15.948" endtime="20190115 16:48:16.666"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0">Regression_Tests</stat>
<stat pass="2" fail="0">Slightly_Refined_And_Room_For_Enhancements</stat>
</tag>
<suite>
<stat id="s1" name="Robot Framework test run with Requests Library in parallel and generate random string test data using Robot Framwork's String library" pass="2" fail="0">Robot Framework test run with Requests Library in parallel and generate random string test data using Robot Framwork's String library</stat>
<stat id="s1-s1" name="Docker-Example-Requests-Library1-Enhanced-Version" pass="1" fail="0">Robot Framework test run with Requests Library in parallel and generate random string test data using Robot Framwork's String library.Docker-Example-Requests-Library1-Enhanced-Version</stat>
<stat id="s1-s2" name="Docker-Example-Requests-Library2-Enhanced-Version" pass="1" fail="0">Robot Framework test run with Requests Library in parallel and generate random string test data using Robot Framwork's String library.Docker-Example-Requests-Library2-Enhanced-Version</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
