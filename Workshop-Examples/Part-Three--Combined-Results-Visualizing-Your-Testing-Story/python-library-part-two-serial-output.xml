<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 3.1.1 (Python 3.5.6 on linux)" generated="20190115 16:48:09.282" rpa="false">
<suite name="Robot Framework test run with user-created Python Library at a time in serial random order" id="s1">
<suite name="Docker-Example-Python-Library2-Enhanced-Version" id="s1-s1" source="/rfw/Tests/Part-Two--RFW-Strategies-For-Enhancing-Existing-Tests-And-Taking-Your-Test-Process-Further/Docker-Example-Python-Library2-Enhanced-Version.robot">
<test name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a DELETE request to jsonplaceholder.typicode.com/posts/2 and check the response." id="s1-s1-t1">
<kw library="DockerExample" name="Send Delete Request Robot File Two">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</var>
</assign>
<msg level="INFO" timestamp="20190115 16:48:08.786">${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status endtime="20190115 16:48:08.786" status="PASS" starttime="20190115 16:48:08.407"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.788" status="PASS" starttime="20190115 16:48:08.787"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.789" status="PASS" starttime="20190115 16:48:08.789"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.791" status="PASS" starttime="20190115 16:48:08.790"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</arg>
</arguments>
<status endtime="20190115 16:48:08.793" status="PASS" starttime="20190115 16:48:08.792"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.794" status="PASS" starttime="20190115 16:48:08.793"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.795" status="PASS" starttime="20190115 16:48:08.794"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.796" status="PASS" starttime="20190115 16:48:08.796"></status>
</kw>
<kw library="BuiltIn" name="Should Not Be Equal As Strings">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:08.797">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20190115 16:48:08.797">200 == 200</msg>
<status endtime="20190115 16:48:08.797" status="FAIL" starttime="20190115 16:48:08.797"></status>
</kw>
<kw type="teardown" name="Trigger Only After Failure">
<kw library="BuiltIn" name="Run Keyword If Test Failed">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<kw name="Failure Detected Notify Team">
<kw library="SharedKeywordsAndListeners" name="Send Short Message Through Slack And Email">
<arguments>
<arg>regression tests in the Docker-Example-Python-Library2-Enhanced-Version.robot file</arg>
<arg>${TEST_ENVIRONMENT}</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "The ${TEST_NAME} failed in the ${TEST_ENVIRONMENT} environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:08.800">Starting process:
echo "The regression tests in the Docker-Example-Python-Library2-Enhanced-Version.robot file failed in the QA environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</msg>
<msg level="INFO" timestamp="20190115 16:48:08.804">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190115 16:48:08.907">Process completed.</msg>
<status endtime="20190115 16:48:08.907" status="PASS" starttime="20190115 16:48:08.800"></status>
</kw>
<kw library="TestFailureEmailNotification" name="Send Email Notification">
<doc>When a test fails you can send an email. Here are some examples that could work...</doc>
<status endtime="20190115 16:48:08.909" status="PASS" starttime="20190115 16:48:08.908"></status>
</kw>
<status endtime="20190115 16:48:08.909" status="PASS" starttime="20190115 16:48:08.799"></status>
</kw>
<status endtime="20190115 16:48:08.909" status="PASS" starttime="20190115 16:48:08.799"></status>
</kw>
<status endtime="20190115 16:48:08.909" status="PASS" starttime="20190115 16:48:08.799"></status>
</kw>
<status endtime="20190115 16:48:08.910" status="PASS" starttime="20190115 16:48:08.798"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status endtime="20190115 16:48:08.910" status="FAIL" critical="yes" starttime="20190115 16:48:08.406">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="fail"&gt;FAIL&lt;/span&gt;&lt;br&gt;New message: 200 == 200&lt;hr&gt;Old status: &lt;span class="fail"&gt;FAIL&lt;/span&gt;&lt;br&gt;Old message: 200 == 200</status>
</test>
<test name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PUT request to jsonplaceholder.typicode.com/posts and check the response." id="s1-s1-t2">
<kw library="DockerExample" name="Send Put Request Robot File Two">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</var>
</assign>
<msg level="INFO" timestamp="20190115 16:48:07.966">${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE} = &lt;Response [200]&gt;</msg>
<status endtime="20190115 16:48:07.966" status="PASS" starttime="20190115 16:48:07.568"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:07.968" status="PASS" starttime="20190115 16:48:07.967"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:07.970" status="PASS" starttime="20190115 16:48:07.969"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:07.971" status="PASS" starttime="20190115 16:48:07.970"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</arg>
</arguments>
<status endtime="20190115 16:48:07.972" status="PASS" starttime="20190115 16:48:07.972"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:07.973" status="PASS" starttime="20190115 16:48:07.973"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:07.974" status="PASS" starttime="20190115 16:48:07.974"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:07.976" status="PASS" starttime="20190115 16:48:07.975"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
</arguments>
<status endtime="20190115 16:48:07.977" status="PASS" starttime="20190115 16:48:07.976"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:07.978" status="PASS" starttime="20190115 16:48:07.978"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:07.979" status="PASS" starttime="20190115 16:48:07.979"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:07.980" status="PASS" starttime="20190115 16:48:07.980"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:07.981">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status endtime="20190115 16:48:07.981" status="PASS" starttime="20190115 16:48:07.981"></status>
</kw>
<kw library="Collections" name="Dictionary Should Contain Key">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status endtime="20190115 16:48:07.982" status="PASS" starttime="20190115 16:48:07.982"></status>
</kw>
<kw library="Collections" name="Get Dictionary Values">
<doc>Returns values of the given dictionary.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg level="INFO" timestamp="20190115 16:48:07.983">${POST_RESPONSE_VALUES} = [2]</msg>
<status endtime="20190115 16:48:07.983" status="PASS" starttime="20190115 16:48:07.983"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[2]</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:07.984">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status endtime="20190115 16:48:07.984" status="PASS" starttime="20190115 16:48:07.983"></status>
</kw>
<kw type="teardown" name="Trigger Only After Failure">
<kw library="BuiltIn" name="Run Keyword If Test Failed">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status endtime="20190115 16:48:07.985" status="PASS" starttime="20190115 16:48:07.985"></status>
</kw>
<status endtime="20190115 16:48:07.985" status="PASS" starttime="20190115 16:48:07.984"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status endtime="20190115 16:48:07.986" status="PASS" critical="yes" starttime="20190115 16:48:07.566">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<test name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PATCH request to &quot;body&quot; for jsonplaceholder.typicode.com/posts/2 and check the response." id="s1-s1-t3">
<kw library="DockerExample" name="Send Patch Request Robot File Two">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</var>
</assign>
<msg level="INFO" timestamp="20190115 16:48:08.296">${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status endtime="20190115 16:48:08.296" status="PASS" starttime="20190115 16:48:07.989"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.297" status="PASS" starttime="20190115 16:48:08.297"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.299" status="PASS" starttime="20190115 16:48:08.298"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.300" status="PASS" starttime="20190115 16:48:08.299"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</arg>
</arguments>
<status endtime="20190115 16:48:08.301" status="PASS" starttime="20190115 16:48:08.301"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.304" status="PASS" starttime="20190115 16:48:08.302"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.305" status="PASS" starttime="20190115 16:48:08.304"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.306" status="PASS" starttime="20190115 16:48:08.306"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
</arguments>
<status endtime="20190115 16:48:08.308" status="PASS" starttime="20190115 16:48:08.307"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.309" status="PASS" starttime="20190115 16:48:08.309"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.311" status="PASS" starttime="20190115 16:48:08.310"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.312" status="PASS" starttime="20190115 16:48:08.311"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:08.313">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status endtime="20190115 16:48:08.313" status="PASS" starttime="20190115 16:48:08.312"></status>
</kw>
<kw library="Collections" name="Dictionary Should Contain Value">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status endtime="20190115 16:48:08.314" status="PASS" starttime="20190115 16:48:08.313"></status>
</kw>
<kw type="teardown" name="Trigger Only After Failure">
<kw library="BuiltIn" name="Run Keyword If Test Failed">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status endtime="20190115 16:48:08.315" status="PASS" starttime="20190115 16:48:08.315"></status>
</kw>
<status endtime="20190115 16:48:08.315" status="PASS" starttime="20190115 16:48:08.314"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status endtime="20190115 16:48:08.315" status="PASS" critical="yes" starttime="20190115 16:48:07.987">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<test name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a GET request to jsonplaceholder.typicode.com/posts/2 and check the response." id="s1-s1-t4">
<kw library="DockerExample" name="Send Get Request Robot File Two">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</var>
</assign>
<msg level="INFO" timestamp="20190115 16:48:08.385">${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status endtime="20190115 16:48:08.385" status="PASS" starttime="20190115 16:48:08.319"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.387" status="PASS" starttime="20190115 16:48:08.386"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.388" status="PASS" starttime="20190115 16:48:08.388"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.390" status="PASS" starttime="20190115 16:48:08.389"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</arg>
</arguments>
<status endtime="20190115 16:48:08.391" status="PASS" starttime="20190115 16:48:08.391"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.393" status="PASS" starttime="20190115 16:48:08.392"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.394" status="PASS" starttime="20190115 16:48:08.394"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.395" status="PASS" starttime="20190115 16:48:08.395"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
</arguments>
<status endtime="20190115 16:48:08.396" status="PASS" starttime="20190115 16:48:08.396"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.398" status="PASS" starttime="20190115 16:48:08.397"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.399" status="PASS" starttime="20190115 16:48:08.398"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:08.400" status="PASS" starttime="20190115 16:48:08.399"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:08.401">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status endtime="20190115 16:48:08.401" status="PASS" starttime="20190115 16:48:08.401"></status>
</kw>
<kw library="Collections" name="Dictionary Should Contain Value">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>qui est esse</arg>
</arguments>
<status endtime="20190115 16:48:08.402" status="PASS" starttime="20190115 16:48:08.402"></status>
</kw>
<kw library="Collections" name="Dictionary Should Not Contain Value">
<doc>Fails if ``value`` is found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status endtime="20190115 16:48:08.403" status="PASS" starttime="20190115 16:48:08.402"></status>
</kw>
<kw type="teardown" name="Trigger Only After Failure">
<kw library="BuiltIn" name="Run Keyword If Test Failed">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status endtime="20190115 16:48:08.404" status="PASS" starttime="20190115 16:48:08.404"></status>
</kw>
<status endtime="20190115 16:48:08.404" status="PASS" starttime="20190115 16:48:08.403"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status endtime="20190115 16:48:08.404" status="PASS" critical="yes" starttime="20190115 16:48:08.317">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<doc>Part Two of the Python Library example has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add 2 types of Robot Framework listeners and a team notification keyword.
Also added the "--randomize all" option in the commands-running-inside-a-docker-container.sh script, and will demonstrate the use of the "--rerunfailedsuites" option.</doc>
<status endtime="N/A" status="FAIL" elapsedtime="1339" starttime="N/A"></status>
</suite>
<suite name="Docker-Example-Python-Library1-Enhanced-Version" id="s1-s2" source="/rfw/Tests/Part-Two--RFW-Strategies-For-Enhancing-Existing-Tests-And-Taking-Your-Test-Process-Further/Docker-Example-Python-Library1-Enhanced-Version.robot">
<test name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a POST request to jsonplaceholder.typicode.com/posts and check the response." id="s1-s2-t1">
<kw library="DockerExample" name="Send Post Request Robot File One">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</var>
</assign>
<msg level="INFO" timestamp="20190115 16:48:06.456">${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE} = &lt;Response [201]&gt;</msg>
<status endtime="20190115 16:48:06.456" status="PASS" starttime="20190115 16:48:06.132"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.458" status="PASS" starttime="20190115 16:48:06.457"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.459" status="PASS" starttime="20190115 16:48:06.458"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.460" status="PASS" starttime="20190115 16:48:06.460"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</arg>
</arguments>
<status endtime="20190115 16:48:06.462" status="PASS" starttime="20190115 16:48:06.461"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.463" status="PASS" starttime="20190115 16:48:06.463"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.464" status="PASS" starttime="20190115 16:48:06.464"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.465" status="PASS" starttime="20190115 16:48:06.465"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<status endtime="20190115 16:48:06.466" status="PASS" starttime="20190115 16:48:06.466"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.468" status="PASS" starttime="20190115 16:48:06.467"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.469" status="PASS" starttime="20190115 16:48:06.468"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.470" status="PASS" starttime="20190115 16:48:06.469"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.status_code}</arg>
<arg>201</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:06.470">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status endtime="20190115 16:48:06.471" status="PASS" starttime="20190115 16:48:06.470"></status>
</kw>
<kw library="Collections" name="Dictionary Should Contain Key">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status endtime="20190115 16:48:06.471" status="PASS" starttime="20190115 16:48:06.471"></status>
</kw>
<kw library="Collections" name="Get Dictionary Values">
<doc>Returns values of the given dictionary.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg level="INFO" timestamp="20190115 16:48:06.472">${POST_RESPONSE_VALUES} = [101]</msg>
<status endtime="20190115 16:48:06.472" status="PASS" starttime="20190115 16:48:06.472"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[101]</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:06.473">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status endtime="20190115 16:48:06.473" status="PASS" starttime="20190115 16:48:06.473"></status>
</kw>
<kw type="teardown" name="Trigger Only After Failure">
<kw library="BuiltIn" name="Run Keyword If Test Failed">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status endtime="20190115 16:48:06.474" status="PASS" starttime="20190115 16:48:06.474"></status>
</kw>
<status endtime="20190115 16:48:06.474" status="PASS" starttime="20190115 16:48:06.474"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status endtime="20190115 16:48:06.475" status="PASS" critical="yes" starttime="20190115 16:48:06.130">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<test name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a GET request to jsonplaceholder.typicode.com/posts/1 and check the response." id="s1-s2-t2">
<kw library="DockerExample" name="Send Get Request Robot File One">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</var>
</assign>
<msg level="INFO" timestamp="20190115 16:48:06.947">${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status endtime="20190115 16:48:06.947" status="PASS" starttime="20190115 16:48:06.879"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.949" status="PASS" starttime="20190115 16:48:06.948"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.950" status="PASS" starttime="20190115 16:48:06.950"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.952" status="PASS" starttime="20190115 16:48:06.951"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</arg>
</arguments>
<status endtime="20190115 16:48:06.953" status="PASS" starttime="20190115 16:48:06.952"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.954" status="PASS" starttime="20190115 16:48:06.953"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.955" status="PASS" starttime="20190115 16:48:06.954"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.956" status="PASS" starttime="20190115 16:48:06.955"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.json()}</arg>
</arguments>
<status endtime="20190115 16:48:06.957" status="PASS" starttime="20190115 16:48:06.956"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.958" status="PASS" starttime="20190115 16:48:06.958"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.959" status="PASS" starttime="20190115 16:48:06.959"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.960" status="PASS" starttime="20190115 16:48:06.960"></status>
</kw>
<kw library="BuiltIn" name="Should Not Be Equal As Strings">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:06.961">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg level="FAIL" timestamp="20190115 16:48:06.961">200 == 200</msg>
<status endtime="20190115 16:48:06.961" status="FAIL" starttime="20190115 16:48:06.960"></status>
</kw>
<kw type="teardown" name="Trigger Only After Failure">
<kw library="BuiltIn" name="Run Keyword If Test Failed">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<kw name="Failure Detected Notify Team">
<kw library="SharedKeywordsAndListeners" name="Send Short Message Through Slack And Email">
<arguments>
<arg>regression tests in the Docker-Example-Python-Library1-Enhanced-Version.robot file</arg>
<arg>${TEST_ENVIRONMENT}</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "The ${TEST_NAME} failed in the ${TEST_ENVIRONMENT} environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:06.963">Starting process:
echo "The regression tests in the Docker-Example-Python-Library1-Enhanced-Version.robot file failed in the QA environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</msg>
<msg level="INFO" timestamp="20190115 16:48:06.967">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190115 16:48:07.069">Process completed.</msg>
<status endtime="20190115 16:48:07.069" status="PASS" starttime="20190115 16:48:06.963"></status>
</kw>
<kw library="TestFailureEmailNotification" name="Send Email Notification">
<doc>When a test fails you can send an email. Here are some examples that could work...</doc>
<status endtime="20190115 16:48:07.070" status="PASS" starttime="20190115 16:48:07.070"></status>
</kw>
<status endtime="20190115 16:48:07.071" status="PASS" starttime="20190115 16:48:06.963"></status>
</kw>
<status endtime="20190115 16:48:07.071" status="PASS" starttime="20190115 16:48:06.962"></status>
</kw>
<status endtime="20190115 16:48:07.071" status="PASS" starttime="20190115 16:48:06.962"></status>
</kw>
<status endtime="20190115 16:48:07.071" status="PASS" starttime="20190115 16:48:06.962"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status endtime="20190115 16:48:07.072" status="FAIL" critical="yes" starttime="20190115 16:48:06.878">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="fail"&gt;FAIL&lt;/span&gt;&lt;br&gt;New message: 200 == 200&lt;hr&gt;Old status: &lt;span class="fail"&gt;FAIL&lt;/span&gt;&lt;br&gt;Old message: 200 == 200</status>
</test>
<test name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a DELETE request to jsonplaceholder.typicode.com/posts/1 and check the response." id="s1-s2-t3">
<kw library="DockerExample" name="Send Delete Request Robot File One">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</var>
</assign>
<msg level="INFO" timestamp="20190115 16:48:07.523">${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status endtime="20190115 16:48:07.524" status="PASS" starttime="20190115 16:48:07.076"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:07.525" status="PASS" starttime="20190115 16:48:07.524"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:07.526" status="PASS" starttime="20190115 16:48:07.526"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:07.528" status="PASS" starttime="20190115 16:48:07.527"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</arg>
</arguments>
<status endtime="20190115 16:48:07.529" status="PASS" starttime="20190115 16:48:07.528"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:07.530" status="PASS" starttime="20190115 16:48:07.530"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:07.531" status="PASS" starttime="20190115 16:48:07.531"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:07.532" status="PASS" starttime="20190115 16:48:07.532"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:07.533">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status endtime="20190115 16:48:07.534" status="PASS" starttime="20190115 16:48:07.533"></status>
</kw>
<kw library="BuiltIn" name="Should Be Empty">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.json()}</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:07.535">Length is 0</msg>
<status endtime="20190115 16:48:07.535" status="PASS" starttime="20190115 16:48:07.534"></status>
</kw>
<kw type="teardown" name="Trigger Only After Failure">
<kw library="BuiltIn" name="Run Keyword If Test Failed">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status endtime="20190115 16:48:07.536" status="PASS" starttime="20190115 16:48:07.536"></status>
</kw>
<status endtime="20190115 16:48:07.536" status="PASS" starttime="20190115 16:48:07.535"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status endtime="20190115 16:48:07.536" status="PASS" critical="yes" starttime="20190115 16:48:07.075">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<test name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a PATCH request to &quot;title&quot; for jsonplaceholder.typicode.com/posts/1 and check the response." id="s1-s2-t4">
<kw library="DockerExample" name="Send Patch Request Robot File One">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</var>
</assign>
<msg level="INFO" timestamp="20190115 16:48:06.859">${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status endtime="20190115 16:48:06.859" status="PASS" starttime="20190115 16:48:06.478"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.861" status="PASS" starttime="20190115 16:48:06.860"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.862" status="PASS" starttime="20190115 16:48:06.862"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.864" status="PASS" starttime="20190115 16:48:06.863"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</arg>
</arguments>
<status endtime="20190115 16:48:06.865" status="PASS" starttime="20190115 16:48:06.864"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.866" status="PASS" starttime="20190115 16:48:06.866"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.867" status="PASS" starttime="20190115 16:48:06.867"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.868" status="PASS" starttime="20190115 16:48:06.868"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
</arguments>
<status endtime="20190115 16:48:06.870" status="PASS" starttime="20190115 16:48:06.869"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.871" status="PASS" starttime="20190115 16:48:06.871"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.872" status="PASS" starttime="20190115 16:48:06.871"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190115 16:48:06.873" status="PASS" starttime="20190115 16:48:06.872"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:06.874">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status endtime="20190115 16:48:06.874" status="PASS" starttime="20190115 16:48:06.873"></status>
</kw>
<kw library="Collections" name="Dictionary Should Contain Value">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status endtime="20190115 16:48:06.875" status="PASS" starttime="20190115 16:48:06.874"></status>
</kw>
<kw type="teardown" name="Trigger Only After Failure">
<kw library="BuiltIn" name="Run Keyword If Test Failed">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status endtime="20190115 16:48:06.876" status="PASS" starttime="20190115 16:48:06.876"></status>
</kw>
<status endtime="20190115 16:48:06.876" status="PASS" starttime="20190115 16:48:06.875"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status endtime="20190115 16:48:06.876" status="PASS" critical="yes" starttime="20190115 16:48:06.477">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<doc>Part Two of the Python Library example has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add 2 types of Robot Framework listeners and a team notification keyword.
Also added the "--randomize all" option in the commands-running-inside-a-docker-container.sh script, and will demonstrate the use of the "--rerunfailedsuites".</doc>
<status endtime="N/A" status="FAIL" elapsedtime="1399" starttime="N/A"></status>
</suite>
<metadata>
<item name="Randomized">Suites and tests (seed 1023704896415934365)</item>
</metadata>
<status endtime="N/A" status="FAIL" elapsedtime="2738" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="2">Critical Tests</stat>
<stat pass="6" fail="2">All Tests</stat>
</total>
<tag>
<stat pass="6" fail="2">Regression_Tests</stat>
<stat pass="6" fail="2">Slightly_Refined_And_Room_For_Enhancements</stat>
</tag>
<suite>
<stat pass="6" fail="2" name="Robot Framework test run with user-created Python Library at a time in serial random order" id="s1">Robot Framework test run with user-created Python Library at a time in serial random order</stat>
<stat pass="3" fail="1" name="Docker-Example-Python-Library2-Enhanced-Version" id="s1-s1">Robot Framework test run with user-created Python Library at a time in serial random order.Docker-Example-Python-Library2-Enhanced-Version</stat>
<stat pass="3" fail="1" name="Docker-Example-Python-Library1-Enhanced-Version" id="s1-s2">Robot Framework test run with user-created Python Library at a time in serial random order.Docker-Example-Python-Library1-Enhanced-Version</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
