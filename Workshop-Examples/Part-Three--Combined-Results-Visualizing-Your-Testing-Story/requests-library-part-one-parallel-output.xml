<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generator="Rebot 3.1.1 (Python 3.5.6 on linux)" generated="20190114 15:35:20.231">
<suite id="s1" name="Robot Framework test run with Requests Library in parallel">
<suite id="s1-s1" source="/rfw/Tests/Part-One--RFW-Strategies-For-Rapidly-Testing-And-Adapting-To-Frequently-Changing-Projects/Docker-Example-Requests-Library1.robot" name="Docker-Example-Requests-Library1">
<test id="s1-s1-t1" name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE ONE : Send a POST request to jsonplaceholder.typicode.com/posts and check the response.">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20190114 15:35:18.241" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" endtime="20190114 15:35:18.242" starttime="20190114 15:35:18.240"></status>
</kw>
<kw library="RequestsLibrary" name="Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20190114 15:35:18.242" level="INFO">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190114 15:35:18.243" starttime="20190114 15:35:18.242"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</var>
</assign>
<msg timestamp="20190114 15:35:18.980" level="INFO">Post Request using : alias=jsonplaceholder, uri=/posts, data=&lt;empty&gt;, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190114 15:35:18.980" level="INFO">${REQUESTS_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190114 15:35:18.980" starttime="20190114 15:35:18.243"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.981" starttime="20190114 15:35:18.980"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.983" starttime="20190114 15:35:18.982"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.984" starttime="20190114 15:35:18.983"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.985" starttime="20190114 15:35:18.984"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.986" starttime="20190114 15:35:18.985"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.988" starttime="20190114 15:35:18.987"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.989" starttime="20190114 15:35:18.988"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.990" starttime="20190114 15:35:18.989"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.991" starttime="20190114 15:35:18.990"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.992" starttime="20190114 15:35:18.991"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.993" starttime="20190114 15:35:18.992"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20190114 15:35:18.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190114 15:35:18.994" starttime="20190114 15:35:18.993"></status>
</kw>
<kw library="Collections" name="Dictionary Should Contain Key">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.994" starttime="20190114 15:35:18.994"></status>
</kw>
<kw library="Collections" name="Get Dictionary Values">
<doc>Returns values of the given dictionary.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg timestamp="20190114 15:35:18.995" level="INFO">${POST_RESPONSE_VALUES} = [101]</msg>
<status status="PASS" endtime="20190114 15:35:18.995" starttime="20190114 15:35:18.995"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[101]</arg>
</arguments>
<msg timestamp="20190114 15:35:18.996" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190114 15:35:18.996" starttime="20190114 15:35:18.995"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" endtime="20190114 15:35:18.996" starttime="20190114 15:35:18.238" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE ONE : Send a PATCH request to &quot;title&quot; for jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20190114 15:35:19.000" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" endtime="20190114 15:35:19.000" starttime="20190114 15:35:18.999"></status>
</kw>
<kw library="RequestsLibrary" name="Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20190114 15:35:19.000" level="INFO">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190114 15:35:19.001" starttime="20190114 15:35:19.000"></status>
</kw>
<kw library="RequestsLibrary" name="Patch Request">
<doc>Send a PATCH request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/1</arg>
<arg>data={"title":"Testing with Robot Framework."}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20190114 15:35:19.416" level="INFO">Patch Request using : alias=jsonplaceholder, uri=/posts/1, data={"title":"Testing with Robot Framework."},                     headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190114 15:35:19.416" level="INFO">${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190114 15:35:19.416" starttime="20190114 15:35:19.001"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.417" starttime="20190114 15:35:19.416"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.418" starttime="20190114 15:35:19.417"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.419" starttime="20190114 15:35:19.418"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.420" starttime="20190114 15:35:19.419"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.421" starttime="20190114 15:35:19.420"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.422" starttime="20190114 15:35:19.421"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.423" starttime="20190114 15:35:19.422"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.424" starttime="20190114 15:35:19.423"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.425" starttime="20190114 15:35:19.425"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.426" starttime="20190114 15:35:19.426"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.428" starttime="20190114 15:35:19.427"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190114 15:35:19.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190114 15:35:19.428" starttime="20190114 15:35:19.428"></status>
</kw>
<kw library="Collections" name="Dictionary Should Contain Value">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.429" starttime="20190114 15:35:19.428"></status>
</kw>
<tags>
<tag>Refined_And_Room_For_More_Enhancements</tag>
<tag>Regression_Tests</tag>
</tags>
<status status="PASS" endtime="20190114 15:35:19.429" starttime="20190114 15:35:18.998" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE ONE : Send a GET request to jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20190114 15:35:19.432" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" endtime="20190114 15:35:19.432" starttime="20190114 15:35:19.432"></status>
</kw>
<kw library="RequestsLibrary" name="Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20190114 15:35:19.433" level="INFO">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190114 15:35:19.433" starttime="20190114 15:35:19.432"></status>
</kw>
<kw library="RequestsLibrary" name="Get Request">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/1</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</var>
</assign>
<msg timestamp="20190114 15:35:19.504" level="INFO">Get Request using : alias=jsonplaceholder, uri=/posts/1, headers={'Content-Type': 'application/json'} json=None</msg>
<msg timestamp="20190114 15:35:19.504" level="INFO">${REQUESTS_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190114 15:35:19.504" starttime="20190114 15:35:19.433"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.506" starttime="20190114 15:35:19.505"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.507" starttime="20190114 15:35:19.506"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.508" starttime="20190114 15:35:19.507"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.509" starttime="20190114 15:35:19.508"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.509" starttime="20190114 15:35:19.509"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.510" starttime="20190114 15:35:19.510"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.512" starttime="20190114 15:35:19.510"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.513" starttime="20190114 15:35:19.512"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.514" starttime="20190114 15:35:19.513"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.515" starttime="20190114 15:35:19.514"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.516" starttime="20190114 15:35:19.515"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190114 15:35:19.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190114 15:35:19.516" starttime="20190114 15:35:19.516"></status>
</kw>
<kw library="Collections" name="Dictionary Should Contain Value">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.json()}</arg>
<arg>quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.517" starttime="20190114 15:35:19.517"></status>
</kw>
<kw library="Collections" name="Dictionary Should Not Contain Value">
<doc>Fails if ``value`` is found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.518" starttime="20190114 15:35:19.517"></status>
</kw>
<tags>
<tag>Refined_And_Room_For_More_Enhancements</tag>
<tag>Regression_Tests</tag>
</tags>
<status status="PASS" endtime="20190114 15:35:19.518" starttime="20190114 15:35:19.430" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE ONE : Send a DELETE request to jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20190114 15:35:19.521" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" endtime="20190114 15:35:19.521" starttime="20190114 15:35:19.521"></status>
</kw>
<kw library="RequestsLibrary" name="Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20190114 15:35:19.522" level="INFO">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190114 15:35:19.522" starttime="20190114 15:35:19.522"></status>
</kw>
<kw library="RequestsLibrary" name="Delete Request">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/1</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20190114 15:35:19.867" level="INFO">Delete Request using : alias=jsonplaceholder, uri=/posts/1, data=None,                     headers={'Content-Type': 'application/json'}, allow_redirects=True </msg>
<msg timestamp="20190114 15:35:19.867" level="INFO">${REQUESTS_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190114 15:35:19.868" starttime="20190114 15:35:19.522"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.869" starttime="20190114 15:35:19.868"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.871" starttime="20190114 15:35:19.869"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.872" starttime="20190114 15:35:19.871"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.873" starttime="20190114 15:35:19.872"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.875" starttime="20190114 15:35:19.874"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.876" starttime="20190114 15:35:19.875"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.877" starttime="20190114 15:35:19.876"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190114 15:35:19.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190114 15:35:19.878" starttime="20190114 15:35:19.877"></status>
</kw>
<kw library="BuiltIn" name="Should Be Empty">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.json()}</arg>
</arguments>
<msg timestamp="20190114 15:35:19.878" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20190114 15:35:19.878" starttime="20190114 15:35:19.878"></status>
</kw>
<tags>
<tag>Refined_And_Room_For_More_Enhancements</tag>
<tag>Regression_Tests</tag>
</tags>
<status status="PASS" endtime="20190114 15:35:19.878" starttime="20190114 15:35:19.519" critical="yes"></status>
</test>
<doc>In a hypothetical scenario, where you are split between 3 or more frequently changing projects. Maybe you were able to convince your team leaders and developers
to let you try out a different and more refined approach for building out your Robot Framework regression tests. The following assumes that your team is comfortable
with looking at and contributing to a test that is mostly written using keywords from a Robot Framework test library. In this case the robotframework-requests library...</doc>
<status status="PASS" endtime="20190114 15:35:19.880" starttime="20190114 15:35:18.141"></status>
</suite>
<suite id="s1-s2" source="/rfw/Tests/Part-One--RFW-Strategies-For-Rapidly-Testing-And-Adapting-To-Frequently-Changing-Projects/Docker-Example-Requests-Library2.robot" name="Docker-Example-Requests-Library2">
<test id="s1-s2-t1" name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE TWO : Send a PUT request to jsonplaceholder.typicode.com/posts and check the response.">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20190114 15:35:18.241" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" endtime="20190114 15:35:18.241" starttime="20190114 15:35:18.240"></status>
</kw>
<kw library="RequestsLibrary" name="Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20190114 15:35:18.242" level="INFO">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190114 15:35:18.242" starttime="20190114 15:35:18.242"></status>
</kw>
<kw library="RequestsLibrary" name="Put Request">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/2</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PUT_RESPONSE}</var>
</assign>
<msg timestamp="20190114 15:35:18.979" level="INFO">Put Request using : alias=jsonplaceholder, uri=/posts/2, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190114 15:35:18.979" level="INFO">${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PUT_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190114 15:35:18.980" starttime="20190114 15:35:18.243"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.981" starttime="20190114 15:35:18.980"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.983" starttime="20190114 15:35:18.982"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.984" starttime="20190114 15:35:18.983"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PUT_RESPONSE}</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.985" starttime="20190114 15:35:18.984"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.986" starttime="20190114 15:35:18.985"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.988" starttime="20190114 15:35:18.987"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.989" starttime="20190114 15:35:18.988"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PUT_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.990" starttime="20190114 15:35:18.989"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.991" starttime="20190114 15:35:18.990"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.992" starttime="20190114 15:35:18.991"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.993" starttime="20190114 15:35:18.992"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PUT_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190114 15:35:18.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190114 15:35:18.994" starttime="20190114 15:35:18.993"></status>
</kw>
<kw library="Collections" name="Dictionary Should Contain Key">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PUT_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:18.994" starttime="20190114 15:35:18.994"></status>
</kw>
<kw library="Collections" name="Get Dictionary Values">
<doc>Returns values of the given dictionary.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PUT_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${PUT_RESPONSE_VALUES}</var>
</assign>
<msg timestamp="20190114 15:35:18.995" level="INFO">${PUT_RESPONSE_VALUES} = [2]</msg>
<status status="PASS" endtime="20190114 15:35:18.995" starttime="20190114 15:35:18.995"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PUT_RESPONSE_VALUES}</arg>
<arg>[2]</arg>
</arguments>
<msg timestamp="20190114 15:35:18.996" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190114 15:35:18.996" starttime="20190114 15:35:18.995"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" endtime="20190114 15:35:18.996" starttime="20190114 15:35:18.238" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE TWO : Send a PATCH request to &quot;body&quot; for jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20190114 15:35:19.000" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" endtime="20190114 15:35:19.000" starttime="20190114 15:35:18.999"></status>
</kw>
<kw library="RequestsLibrary" name="Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20190114 15:35:19.000" level="INFO">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190114 15:35:19.001" starttime="20190114 15:35:19.000"></status>
</kw>
<kw library="RequestsLibrary" name="Patch Request">
<doc>Send a PATCH request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/2</arg>
<arg>data={"body":"Testing with Robot Framework."}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20190114 15:35:19.405" level="INFO">Patch Request using : alias=jsonplaceholder, uri=/posts/2, data={"body":"Testing with Robot Framework."},                     headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190114 15:35:19.405" level="INFO">${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190114 15:35:19.405" starttime="20190114 15:35:19.001"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.407" starttime="20190114 15:35:19.405"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.408" starttime="20190114 15:35:19.407"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.409" starttime="20190114 15:35:19.408"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.410" starttime="20190114 15:35:19.409"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.411" starttime="20190114 15:35:19.410"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.412" starttime="20190114 15:35:19.411"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.413" starttime="20190114 15:35:19.412"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.414" starttime="20190114 15:35:19.413"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.415" starttime="20190114 15:35:19.414"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.416" starttime="20190114 15:35:19.415"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.417" starttime="20190114 15:35:19.416"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190114 15:35:19.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190114 15:35:19.418" starttime="20190114 15:35:19.417"></status>
</kw>
<kw library="Collections" name="Dictionary Should Contain Value">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.419" starttime="20190114 15:35:19.418"></status>
</kw>
<tags>
<tag>Refined_And_Room_For_More_Enhancements</tag>
<tag>Regression_Tests</tag>
</tags>
<status status="PASS" endtime="20190114 15:35:19.419" starttime="20190114 15:35:18.998" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE TWO : Send a GET request to jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20190114 15:35:19.423" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" endtime="20190114 15:35:19.423" starttime="20190114 15:35:19.422"></status>
</kw>
<kw library="RequestsLibrary" name="Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20190114 15:35:19.423" level="INFO">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190114 15:35:19.424" starttime="20190114 15:35:19.423"></status>
</kw>
<kw library="RequestsLibrary" name="Get Request">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/2</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</var>
</assign>
<msg timestamp="20190114 15:35:19.494" level="INFO">Get Request using : alias=jsonplaceholder, uri=/posts/2, headers={'Content-Type': 'application/json'} json=None</msg>
<msg timestamp="20190114 15:35:19.495" level="INFO">${REQUESTS_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190114 15:35:19.495" starttime="20190114 15:35:19.424"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.497" starttime="20190114 15:35:19.495"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.498" starttime="20190114 15:35:19.497"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.499" starttime="20190114 15:35:19.498"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.501" starttime="20190114 15:35:19.500"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.502" starttime="20190114 15:35:19.501"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.503" starttime="20190114 15:35:19.502"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.504" starttime="20190114 15:35:19.503"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.505" starttime="20190114 15:35:19.504"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.506" starttime="20190114 15:35:19.505"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.507" starttime="20190114 15:35:19.506"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.508" starttime="20190114 15:35:19.508"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190114 15:35:19.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190114 15:35:19.509" starttime="20190114 15:35:19.508"></status>
</kw>
<kw library="Collections" name="Dictionary Should Contain Value">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>qui est esse</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.510" starttime="20190114 15:35:19.509"></status>
</kw>
<kw library="Collections" name="Dictionary Should Not Contain Value">
<doc>Fails if ``value`` is found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.510" starttime="20190114 15:35:19.510"></status>
</kw>
<tags>
<tag>Refined_And_Room_For_More_Enhancements</tag>
<tag>Regression_Tests</tag>
</tags>
<status status="PASS" endtime="20190114 15:35:19.511" starttime="20190114 15:35:19.420" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE TWO : Send a DELETE request to jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20190114 15:35:19.514" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" endtime="20190114 15:35:19.514" starttime="20190114 15:35:19.513"></status>
</kw>
<kw library="RequestsLibrary" name="Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20190114 15:35:19.515" level="INFO">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20190114 15:35:19.515" starttime="20190114 15:35:19.514"></status>
</kw>
<kw library="RequestsLibrary" name="Delete Request">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/2</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20190114 15:35:19.737" level="INFO">Delete Request using : alias=jsonplaceholder, uri=/posts/2, data=None,                     headers={'Content-Type': 'application/json'}, allow_redirects=True </msg>
<msg timestamp="20190114 15:35:19.737" level="INFO">${REQUESTS_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190114 15:35:19.737" starttime="20190114 15:35:19.515"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.739" starttime="20190114 15:35:19.737"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.741" starttime="20190114 15:35:19.739"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.742" starttime="20190114 15:35:19.741"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.743" starttime="20190114 15:35:19.742"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.744" starttime="20190114 15:35:19.743"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.746" starttime="20190114 15:35:19.745"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20190114 15:35:19.747" starttime="20190114 15:35:19.746"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190114 15:35:19.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190114 15:35:19.747" starttime="20190114 15:35:19.747"></status>
</kw>
<kw library="BuiltIn" name="Should Be Empty">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE.json()}</arg>
</arguments>
<msg timestamp="20190114 15:35:19.748" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20190114 15:35:19.748" starttime="20190114 15:35:19.747"></status>
</kw>
<tags>
<tag>Refined_And_Room_For_More_Enhancements</tag>
<tag>Regression_Tests</tag>
</tags>
<status status="PASS" endtime="20190114 15:35:19.748" starttime="20190114 15:35:19.512" critical="yes"></status>
</test>
<doc>In a hypothetical scenario, where you are split between 3 or more frequently changing projects. Maybe you were able to convince your team leaders and developers
to let you try out a different and more refined approach for building out your Robot Framework regression tests. The following assumes that your team is comfortable
with looking at and contributing to a test that is mostly written using keywords from a Robot Framework test library. In this case the robotframework-requests library...</doc>
<status status="PASS" endtime="20190114 15:35:19.750" starttime="20190114 15:35:18.141"></status>
</suite>
<status status="PASS" endtime="20190114 15:35:19.884" starttime="20190114 15:35:18.102"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="6" fail="0">Refined_And_Room_For_More_Enhancements</stat>
<stat pass="8" fail="0">Regression_Tests</stat>
<stat pass="2" fail="0">Slightly_Refined_And_Room_For_Enhancements</stat>
</tag>
<suite>
<stat pass="8" id="s1" name="Robot Framework test run with Requests Library in parallel" fail="0">Robot Framework test run with Requests Library in parallel</stat>
<stat pass="4" id="s1-s1" name="Docker-Example-Requests-Library1" fail="0">Robot Framework test run with Requests Library in parallel.Docker-Example-Requests-Library1</stat>
<stat pass="4" id="s1-s2" name="Docker-Example-Requests-Library2" fail="0">Robot Framework test run with Requests Library in parallel.Docker-Example-Requests-Library2</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
