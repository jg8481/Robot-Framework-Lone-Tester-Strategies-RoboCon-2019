<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.1 (Python 3.5.6 on linux)" generated="20190116 12:43:56.257" rpa="false">
<suite name="Robot Framework test run with Requests Library in serial and generate random string test data using Robot Framwork's String library" id="s1">
<suite name="Docker-Example-Requests-Library1-Enhanced-Version" source="/rfw/Tests/Part-Two--RFW-Strategies-For-Enhancing-Existing-Tests-And-Taking-Your-Test-Process-Further/Docker-Example-Requests-Library1-Enhanced-Version.robot" id="s1-s1">
<test name="REQUESTS LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a PATCH request to &quot;userId&quot; for jsonplaceholder.typicode.com/posts/1 using randomized test data generated by built-in Robot Framework keywords and check the response." id="s1-s1-t1">
<kw name="Create Various Random Test Data With The String Library" library="SharedKeywordsAndListeners">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>30</arg>
</arguments>
<assign>
<var>${COMPLETELY_RANDOM_STRING}</var>
</assign>
<msg level="INFO" timestamp="20190116 12:43:56.484">${COMPLETELY_RANDOM_STRING} = XYJSengKvzkY95zD7Z2HYNyEexY9iS</msg>
<status starttime="20190116 12:43:56.483" endtime="20190116 12:43:56.484" status="PASS"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>18</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${LOWERCASE_LETTERS_RANDOM_STRING}</var>
</assign>
<msg level="INFO" timestamp="20190116 12:43:56.485">${LOWERCASE_LETTERS_RANDOM_STRING} = eduancycsrvgttfzgh</msg>
<status starttime="20190116 12:43:56.484" endtime="20190116 12:43:56.485" status="PASS"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>20</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</var>
</assign>
<msg level="INFO" timestamp="20190116 12:43:56.486">${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING} = nrUQutVADpfzFVZVTHIn</msg>
<status starttime="20190116 12:43:56.485" endtime="20190116 12:43:56.486" status="PASS"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>aaaaaaaabbbbbb[NUMBERS]</arg>
</arguments>
<assign>
<var>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</var>
</assign>
<msg level="INFO" timestamp="20190116 12:43:56.487">${LETTERS_WITH_NUMBERS_RANDOM_STRING} = 6abaa19ab2</msg>
<status starttime="20190116 12:43:56.486" endtime="20190116 12:43:56.487" status="PASS"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 12:43:56.488">${COMPLETELY_RANDOM_STRING} = XYJSengKvzkY95zD7Z2HYNyEexY9iS</msg>
<status starttime="20190116 12:43:56.487" endtime="20190116 12:43:56.488" status="PASS"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LOWER_CASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 12:43:56.489">${LOWER_CASE_LETTERS_RANDOM_STRING} = eduancycsrvgttfzgh</msg>
<status starttime="20190116 12:43:56.489" endtime="20190116 12:43:56.490" status="PASS"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 12:43:56.491">${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING} = nrUQutVADpfzFVZVTHIn</msg>
<status starttime="20190116 12:43:56.490" endtime="20190116 12:43:56.491" status="PASS"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 12:43:56.493">${LETTERS_WITH_NUMBERS_RANDOM_STRING} = 6abaa19ab2</msg>
<status starttime="20190116 12:43:56.492" endtime="20190116 12:43:56.493" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190116 12:43:56.493" endtime="20190116 12:43:56.494" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>COMPLETELY RANDOM STRING 30 CHARACTERS LONG...</arg>
</arguments>
<status starttime="20190116 12:43:56.494" endtime="20190116 12:43:56.495" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190116 12:43:56.496" endtime="20190116 12:43:56.497" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190116 12:43:56.498" endtime="20190116 12:43:56.499" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>LOWERCASE LETTERS RANDOM STRING 18 CHARACTERS LONG...</arg>
</arguments>
<status starttime="20190116 12:43:56.499" endtime="20190116 12:43:56.500" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LOWERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190116 12:43:56.501" endtime="20190116 12:43:56.502" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190116 12:43:56.502" endtime="20190116 12:43:56.503" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>LOWERCASE AND UPPERCASE LETTERS RANDOM STRING 20 CHARACTERS LONG...</arg>
</arguments>
<status starttime="20190116 12:43:56.503" endtime="20190116 12:43:56.504" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190116 12:43:56.504" endtime="20190116 12:43:56.505" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190116 12:43:56.505" endtime="20190116 12:43:56.506" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>RANDOM NUMBERS APPENDED TO LETTERS...</arg>
</arguments>
<status starttime="20190116 12:43:56.507" endtime="20190116 12:43:56.508" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190116 12:43:56.508" endtime="20190116 12:43:56.509" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190116 12:43:56.509" endtime="20190116 12:43:56.510" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 12:43:56.512">XYJSengKvzkY95zD7Z2HYNyEexY9iS</msg>
<status starttime="20190116 12:43:56.511" endtime="20190116 12:43:56.512" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LOWERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 12:43:56.513">eduancycsrvgttfzgh</msg>
<status starttime="20190116 12:43:56.513" endtime="20190116 12:43:56.513" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 12:43:56.514">nrUQutVADpfzFVZVTHIn</msg>
<status starttime="20190116 12:43:56.514" endtime="20190116 12:43:56.514" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 12:43:56.515">6abaa19ab2</msg>
<status starttime="20190116 12:43:56.515" endtime="20190116 12:43:56.516" status="PASS"></status>
</kw>
<status starttime="20190116 12:43:56.481" endtime="20190116 12:43:56.516" status="PASS"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg level="INFO" timestamp="20190116 12:43:56.519">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status starttime="20190116 12:43:56.517" endtime="20190116 12:43:56.519" status="PASS"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 12:43:56.521">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status starttime="20190116 12:43:56.520" endtime="20190116 12:43:56.521" status="PASS"></status>
</kw>
<kw name="Patch Request" library="RequestsLibrary">
<doc>Send a PATCH request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/1</arg>
<arg>data={"userId": ${COMPLETELY_RANDOM_STRING}}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</var>
</assign>
<msg level="INFO" timestamp="20190116 12:43:56.871">Patch Request using : alias=jsonplaceholder, uri=/posts/1, data="{\"userId\": XYJSengKvzkY95zD7Z2HYNyEexY9iS}",                     headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg level="INFO" timestamp="20190116 12:43:56.872">${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE} = &lt;Response [500]&gt;</msg>
<status starttime="20190116 12:43:56.522" endtime="20190116 12:43:56.872" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:56.872" endtime="20190116 12:43:56.873" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:56.874" endtime="20190116 12:43:56.874" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:56.875" endtime="20190116 12:43:56.875" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</arg>
</arguments>
<status starttime="20190116 12:43:56.876" endtime="20190116 12:43:56.877" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:56.877" endtime="20190116 12:43:56.878" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:56.878" endtime="20190116 12:43:56.879" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:56.879" endtime="20190116 12:43:56.880" status="PASS"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20190116 12:43:56.881">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20190116 12:43:56.880" endtime="20190116 12:43:56.881" status="PASS"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status starttime="20190116 12:43:56.478" endtime="20190116 12:43:56.881" critical="yes" status="PASS"></status>
</test>
<doc>Part Two of the robotframework-requests library examples has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add randomly generated data to a test through the "Create Various Random Test Data With The String Library" keyword.
This keyword turns the robotframework-requests library examples into an API fuzz testing tool that can run in serial or in parallel.</doc>
<status starttime="20190116 12:43:56.291" endtime="20190116 12:43:56.883" status="PASS"></status>
</suite>
<suite name="Docker-Example-Requests-Library2-Enhanced-Version" source="/rfw/Tests/Part-Two--RFW-Strategies-For-Enhancing-Existing-Tests-And-Taking-Your-Test-Process-Further/Docker-Example-Requests-Library2-Enhanced-Version.robot" id="s1-s2">
<test name="REQUESTS LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PUT request to jsonplaceholder.typicode.com/posts using randomized test data generated by built-in Robot Framework keywords and check the response." id="s1-s2-t1">
<kw name="Create Various Random Test Data With The String Library" library="SharedKeywordsAndListeners">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>30</arg>
</arguments>
<assign>
<var>${COMPLETELY_RANDOM_STRING}</var>
</assign>
<msg level="INFO" timestamp="20190116 12:43:56.919">${COMPLETELY_RANDOM_STRING} = hIzZpZGmaNBX8HG6sry9ynuSseBikI</msg>
<status starttime="20190116 12:43:56.919" endtime="20190116 12:43:56.919" status="PASS"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>18</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${LOWERCASE_LETTERS_RANDOM_STRING}</var>
</assign>
<msg level="INFO" timestamp="20190116 12:43:56.920">${LOWERCASE_LETTERS_RANDOM_STRING} = rtrhalnhgaxizbacqt</msg>
<status starttime="20190116 12:43:56.920" endtime="20190116 12:43:56.920" status="PASS"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>20</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</var>
</assign>
<msg level="INFO" timestamp="20190116 12:43:56.921">${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING} = XowPXPyhNDDUXgApRAfp</msg>
<status starttime="20190116 12:43:56.921" endtime="20190116 12:43:56.921" status="PASS"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>aaaaaaaabbbbbb[NUMBERS]</arg>
</arguments>
<assign>
<var>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</var>
</assign>
<msg level="INFO" timestamp="20190116 12:43:56.922">${LETTERS_WITH_NUMBERS_RANDOM_STRING} = 26abababbb</msg>
<status starttime="20190116 12:43:56.922" endtime="20190116 12:43:56.922" status="PASS"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 12:43:56.923">${COMPLETELY_RANDOM_STRING} = hIzZpZGmaNBX8HG6sry9ynuSseBikI</msg>
<status starttime="20190116 12:43:56.923" endtime="20190116 12:43:56.923" status="PASS"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LOWER_CASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 12:43:56.924">${LOWER_CASE_LETTERS_RANDOM_STRING} = rtrhalnhgaxizbacqt</msg>
<status starttime="20190116 12:43:56.924" endtime="20190116 12:43:56.925" status="PASS"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 12:43:56.925">${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING} = XowPXPyhNDDUXgApRAfp</msg>
<status starttime="20190116 12:43:56.925" endtime="20190116 12:43:56.925" status="PASS"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 12:43:56.926">${LETTERS_WITH_NUMBERS_RANDOM_STRING} = 26abababbb</msg>
<status starttime="20190116 12:43:56.926" endtime="20190116 12:43:56.926" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190116 12:43:56.927" endtime="20190116 12:43:56.928" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>COMPLETELY RANDOM STRING 30 CHARACTERS LONG...</arg>
</arguments>
<status starttime="20190116 12:43:56.928" endtime="20190116 12:43:56.928" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190116 12:43:56.928" endtime="20190116 12:43:56.929" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190116 12:43:56.929" endtime="20190116 12:43:56.930" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>LOWERCASE LETTERS RANDOM STRING 18 CHARACTERS LONG...</arg>
</arguments>
<status starttime="20190116 12:43:56.930" endtime="20190116 12:43:56.930" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LOWERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190116 12:43:56.931" endtime="20190116 12:43:56.932" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190116 12:43:56.932" endtime="20190116 12:43:56.933" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>LOWERCASE AND UPPERCASE LETTERS RANDOM STRING 20 CHARACTERS LONG...</arg>
</arguments>
<status starttime="20190116 12:43:56.933" endtime="20190116 12:43:56.934" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190116 12:43:56.934" endtime="20190116 12:43:56.935" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190116 12:43:56.936" endtime="20190116 12:43:56.937" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>RANDOM NUMBERS APPENDED TO LETTERS...</arg>
</arguments>
<status starttime="20190116 12:43:56.938" endtime="20190116 12:43:56.939" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190116 12:43:56.939" endtime="20190116 12:43:56.941" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190116 12:43:56.941" endtime="20190116 12:43:56.943" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 12:43:56.945">hIzZpZGmaNBX8HG6sry9ynuSseBikI</msg>
<status starttime="20190116 12:43:56.944" endtime="20190116 12:43:56.945" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LOWERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 12:43:56.947">rtrhalnhgaxizbacqt</msg>
<status starttime="20190116 12:43:56.946" endtime="20190116 12:43:56.947" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 12:43:56.949">XowPXPyhNDDUXgApRAfp</msg>
<status starttime="20190116 12:43:56.947" endtime="20190116 12:43:56.949" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 12:43:56.951">26abababbb</msg>
<status starttime="20190116 12:43:56.950" endtime="20190116 12:43:56.952" status="PASS"></status>
</kw>
<status starttime="20190116 12:43:56.918" endtime="20190116 12:43:56.952" status="PASS"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg level="INFO" timestamp="20190116 12:43:56.953">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status starttime="20190116 12:43:56.952" endtime="20190116 12:43:56.953" status="PASS"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 12:43:56.954">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status starttime="20190116 12:43:56.953" endtime="20190116 12:43:56.954" status="PASS"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</var>
</assign>
<msg level="INFO" timestamp="20190116 12:43:57.326">Put Request using : alias=jsonplaceholder, uri=/posts/hIzZpZGmaNBX8HG6sry9ynuSseBikI, data=None,                     headers=None, allow_redirects=True </msg>
<msg level="INFO" timestamp="20190116 12:43:57.326">${REQUESTS_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE} = &lt;Response [500]&gt;</msg>
<status starttime="20190116 12:43:56.955" endtime="20190116 12:43:57.327" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:57.327" endtime="20190116 12:43:57.328" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:57.328" endtime="20190116 12:43:57.329" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:57.329" endtime="20190116 12:43:57.330" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</arg>
</arguments>
<status starttime="20190116 12:43:57.330" endtime="20190116 12:43:57.331" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:57.331" endtime="20190116 12:43:57.332" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:57.333" endtime="20190116 12:43:57.333" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 12:43:57.334" endtime="20190116 12:43:57.334" status="PASS"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20190116 12:43:57.335">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20190116 12:43:57.335" endtime="20190116 12:43:57.335" status="PASS"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status starttime="20190116 12:43:56.916" endtime="20190116 12:43:57.336" critical="yes" status="PASS"></status>
</test>
<doc>Part Two of the robotframework-requests library examples has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add randomly generated data to a test through the "Create Various Random Test Data With The String Library" keyword.
This keyword turns the robotframework-requests library examples into an API fuzz testing tool that can run in serial or in parallel.</doc>
<status starttime="20190116 12:43:56.884" endtime="20190116 12:43:57.338" status="PASS"></status>
</suite>
<status starttime="20190116 12:43:56.259" endtime="20190116 12:43:57.341" status="PASS"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="2">Regression_Tests</stat>
<stat fail="0" pass="2">Slightly_Refined_And_Room_For_Enhancements</stat>
</tag>
<suite>
<stat fail="0" name="Robot Framework test run with Requests Library in serial and generate random string test data using Robot Framwork's String library" pass="2" id="s1">Robot Framework test run with Requests Library in serial and generate random string test data using Robot Framwork's String library</stat>
<stat fail="0" name="Docker-Example-Requests-Library1-Enhanced-Version" pass="1" id="s1-s1">Robot Framework test run with Requests Library in serial and generate random string test data using Robot Framwork's String library.Docker-Example-Requests-Library1-Enhanced-Version</stat>
<stat fail="0" name="Docker-Example-Requests-Library2-Enhanced-Version" pass="1" id="s1-s2">Robot Framework test run with Requests Library in serial and generate random string test data using Robot Framwork's String library.Docker-Example-Requests-Library2-Enhanced-Version</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
