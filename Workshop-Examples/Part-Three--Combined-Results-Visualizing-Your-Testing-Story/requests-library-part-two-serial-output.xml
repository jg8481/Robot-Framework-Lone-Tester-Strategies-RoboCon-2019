<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190115 16:48:13.837" generator="Robot 3.1.1 (Python 3.5.6 on linux)">
<suite name="Robot Framework test run with Requests Library in serial and generate random string test data using Robot Framwork's String library" id="s1">
<suite name="Docker-Example-Requests-Library1-Enhanced-Version" source="/rfw/Tests/Part-Two--RFW-Strategies-For-Enhancing-Existing-Tests-And-Taking-Your-Test-Process-Further/Docker-Example-Requests-Library1-Enhanced-Version.robot" id="s1-s1">
<test name="REQUESTS LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a PATCH request to &quot;userId&quot; for jsonplaceholder.typicode.com/posts/1 using randomized test data generated by built-in Robot Framework keywords and check the response." id="s1-s1-t1">
<kw name="Create Various Random Test Data With The String Library" library="SharedKeywordsAndListeners">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>30</arg>
</arguments>
<assign>
<var>${COMPLETELY_RANDOM_STRING}</var>
</assign>
<msg level="INFO" timestamp="20190115 16:48:14.022">${COMPLETELY_RANDOM_STRING} = prN2QyA40bRVvaLdw2PzvwNKmzZgot</msg>
<status starttime="20190115 16:48:14.021" status="PASS" endtime="20190115 16:48:14.022"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>18</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${LOWERCASE_LETTERS_RANDOM_STRING}</var>
</assign>
<msg level="INFO" timestamp="20190115 16:48:14.022">${LOWERCASE_LETTERS_RANDOM_STRING} = jbacipdsaivfbrntkr</msg>
<status starttime="20190115 16:48:14.022" status="PASS" endtime="20190115 16:48:14.022"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>20</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</var>
</assign>
<msg level="INFO" timestamp="20190115 16:48:14.023">${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING} = CBwPazvcAeXVmuttkPFI</msg>
<status starttime="20190115 16:48:14.022" status="PASS" endtime="20190115 16:48:14.023"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>aaaaaaaabbbbbb[NUMBERS]</arg>
</arguments>
<assign>
<var>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</var>
</assign>
<msg level="INFO" timestamp="20190115 16:48:14.023">${LETTERS_WITH_NUMBERS_RANDOM_STRING} = 194abb4430</msg>
<status starttime="20190115 16:48:14.023" status="PASS" endtime="20190115 16:48:14.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:14.024">${COMPLETELY_RANDOM_STRING} = prN2QyA40bRVvaLdw2PzvwNKmzZgot</msg>
<status starttime="20190115 16:48:14.023" status="PASS" endtime="20190115 16:48:14.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LOWER_CASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:14.024">${LOWER_CASE_LETTERS_RANDOM_STRING} = jbacipdsaivfbrntkr</msg>
<status starttime="20190115 16:48:14.024" status="PASS" endtime="20190115 16:48:14.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:14.025">${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING} = CBwPazvcAeXVmuttkPFI</msg>
<status starttime="20190115 16:48:14.024" status="PASS" endtime="20190115 16:48:14.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:14.025">${LETTERS_WITH_NUMBERS_RANDOM_STRING} = 194abb4430</msg>
<status starttime="20190115 16:48:14.025" status="PASS" endtime="20190115 16:48:14.025"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190115 16:48:14.025" status="PASS" endtime="20190115 16:48:14.026"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>COMPLETELY RANDOM STRING 30 CHARACTERS LONG...</arg>
</arguments>
<status starttime="20190115 16:48:14.026" status="PASS" endtime="20190115 16:48:14.026"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190115 16:48:14.027" status="PASS" endtime="20190115 16:48:14.027"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190115 16:48:14.027" status="PASS" endtime="20190115 16:48:14.028"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>LOWERCASE LETTERS RANDOM STRING 18 CHARACTERS LONG...</arg>
</arguments>
<status starttime="20190115 16:48:14.028" status="PASS" endtime="20190115 16:48:14.028"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LOWERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190115 16:48:14.028" status="PASS" endtime="20190115 16:48:14.029"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190115 16:48:14.029" status="PASS" endtime="20190115 16:48:14.029"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>LOWERCASE AND UPPERCASE LETTERS RANDOM STRING 20 CHARACTERS LONG...</arg>
</arguments>
<status starttime="20190115 16:48:14.029" status="PASS" endtime="20190115 16:48:14.030"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190115 16:48:14.030" status="PASS" endtime="20190115 16:48:14.030"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190115 16:48:14.031" status="PASS" endtime="20190115 16:48:14.031"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>RANDOM NUMBERS APPENDED TO LETTERS...</arg>
</arguments>
<status starttime="20190115 16:48:14.031" status="PASS" endtime="20190115 16:48:14.031"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190115 16:48:14.032" status="PASS" endtime="20190115 16:48:14.032"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190115 16:48:14.032" status="PASS" endtime="20190115 16:48:14.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:14.033">prN2QyA40bRVvaLdw2PzvwNKmzZgot</msg>
<status starttime="20190115 16:48:14.033" status="PASS" endtime="20190115 16:48:14.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LOWERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:14.034">jbacipdsaivfbrntkr</msg>
<status starttime="20190115 16:48:14.033" status="PASS" endtime="20190115 16:48:14.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:14.034">CBwPazvcAeXVmuttkPFI</msg>
<status starttime="20190115 16:48:14.034" status="PASS" endtime="20190115 16:48:14.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:14.034">194abb4430</msg>
<status starttime="20190115 16:48:14.034" status="PASS" endtime="20190115 16:48:14.035"></status>
</kw>
<status starttime="20190115 16:48:14.021" status="PASS" endtime="20190115 16:48:14.035"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg level="INFO" timestamp="20190115 16:48:14.036">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status starttime="20190115 16:48:14.035" status="PASS" endtime="20190115 16:48:14.036"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:14.037">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status starttime="20190115 16:48:14.037" status="PASS" endtime="20190115 16:48:14.038"></status>
</kw>
<kw name="Patch Request" library="RequestsLibrary">
<doc>Send a PATCH request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/1</arg>
<arg>data={"userId": ${COMPLETELY_RANDOM_STRING}}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</var>
</assign>
<msg level="INFO" timestamp="20190115 16:48:14.526">Patch Request using : alias=jsonplaceholder, uri=/posts/1, data="{\"userId\": prN2QyA40bRVvaLdw2PzvwNKmzZgot}",                     headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg level="INFO" timestamp="20190115 16:48:14.526">${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE} = &lt;Response [500]&gt;</msg>
<status starttime="20190115 16:48:14.038" status="PASS" endtime="20190115 16:48:14.526"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190115 16:48:14.527" status="PASS" endtime="20190115 16:48:14.528"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190115 16:48:14.528" status="PASS" endtime="20190115 16:48:14.529"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190115 16:48:14.530" status="PASS" endtime="20190115 16:48:14.530"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</arg>
</arguments>
<status starttime="20190115 16:48:14.531" status="PASS" endtime="20190115 16:48:14.532"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190115 16:48:14.532" status="PASS" endtime="20190115 16:48:14.533"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190115 16:48:14.533" status="PASS" endtime="20190115 16:48:14.534"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190115 16:48:14.534" status="PASS" endtime="20190115 16:48:14.535"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:14.536">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20190115 16:48:14.535" status="PASS" endtime="20190115 16:48:14.536"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status starttime="20190115 16:48:14.019" status="PASS" endtime="20190115 16:48:14.536" critical="yes"></status>
</test>
<doc>Part Two of the robotframework-requests library examples has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add randomly generated data to a test through the "Create Various Random Test Data With The String Library" keyword.
This keyword turns the robotframework-requests library examples into an API fuzz testing tool that can run in serial or in parallel.</doc>
<status starttime="20190115 16:48:13.872" status="PASS" endtime="20190115 16:48:14.538"></status>
</suite>
<suite name="Docker-Example-Requests-Library2-Enhanced-Version" source="/rfw/Tests/Part-Two--RFW-Strategies-For-Enhancing-Existing-Tests-And-Taking-Your-Test-Process-Further/Docker-Example-Requests-Library2-Enhanced-Version.robot" id="s1-s2">
<test name="REQUESTS LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PUT request to jsonplaceholder.typicode.com/posts using randomized test data generated by built-in Robot Framework keywords and check the response." id="s1-s2-t1">
<kw name="Create Various Random Test Data With The String Library" library="SharedKeywordsAndListeners">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>30</arg>
</arguments>
<assign>
<var>${COMPLETELY_RANDOM_STRING}</var>
</assign>
<msg level="INFO" timestamp="20190115 16:48:14.573">${COMPLETELY_RANDOM_STRING} = jYKhrqHt3d0WF2OgYPiAtmM2TOnkpL</msg>
<status starttime="20190115 16:48:14.572" status="PASS" endtime="20190115 16:48:14.573"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>18</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${LOWERCASE_LETTERS_RANDOM_STRING}</var>
</assign>
<msg level="INFO" timestamp="20190115 16:48:14.574">${LOWERCASE_LETTERS_RANDOM_STRING} = smgwxoczoeibkbemuj</msg>
<status starttime="20190115 16:48:14.573" status="PASS" endtime="20190115 16:48:14.574"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>20</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</var>
</assign>
<msg level="INFO" timestamp="20190115 16:48:14.575">${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING} = VeLAgbukRJSmlonJAZIh</msg>
<status starttime="20190115 16:48:14.575" status="PASS" endtime="20190115 16:48:14.575"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>aaaaaaaabbbbbb[NUMBERS]</arg>
</arguments>
<assign>
<var>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</var>
</assign>
<msg level="INFO" timestamp="20190115 16:48:14.576">${LETTERS_WITH_NUMBERS_RANDOM_STRING} = 9b7a4ba87a</msg>
<status starttime="20190115 16:48:14.576" status="PASS" endtime="20190115 16:48:14.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:14.577">${COMPLETELY_RANDOM_STRING} = jYKhrqHt3d0WF2OgYPiAtmM2TOnkpL</msg>
<status starttime="20190115 16:48:14.576" status="PASS" endtime="20190115 16:48:14.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LOWER_CASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:14.578">${LOWER_CASE_LETTERS_RANDOM_STRING} = smgwxoczoeibkbemuj</msg>
<status starttime="20190115 16:48:14.578" status="PASS" endtime="20190115 16:48:14.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:14.579">${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING} = VeLAgbukRJSmlonJAZIh</msg>
<status starttime="20190115 16:48:14.579" status="PASS" endtime="20190115 16:48:14.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:14.580">${LETTERS_WITH_NUMBERS_RANDOM_STRING} = 9b7a4ba87a</msg>
<status starttime="20190115 16:48:14.580" status="PASS" endtime="20190115 16:48:14.580"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190115 16:48:14.580" status="PASS" endtime="20190115 16:48:14.580"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>COMPLETELY RANDOM STRING 30 CHARACTERS LONG...</arg>
</arguments>
<status starttime="20190115 16:48:14.581" status="PASS" endtime="20190115 16:48:14.581"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190115 16:48:14.582" status="PASS" endtime="20190115 16:48:14.582"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190115 16:48:14.582" status="PASS" endtime="20190115 16:48:14.583"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>LOWERCASE LETTERS RANDOM STRING 18 CHARACTERS LONG...</arg>
</arguments>
<status starttime="20190115 16:48:14.583" status="PASS" endtime="20190115 16:48:14.584"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LOWERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190115 16:48:14.584" status="PASS" endtime="20190115 16:48:14.584"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190115 16:48:14.585" status="PASS" endtime="20190115 16:48:14.585"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>LOWERCASE AND UPPERCASE LETTERS RANDOM STRING 20 CHARACTERS LONG...</arg>
</arguments>
<status starttime="20190115 16:48:14.585" status="PASS" endtime="20190115 16:48:14.586"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190115 16:48:14.586" status="PASS" endtime="20190115 16:48:14.587"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190115 16:48:14.587" status="PASS" endtime="20190115 16:48:14.587"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>RANDOM NUMBERS APPENDED TO LETTERS...</arg>
</arguments>
<status starttime="20190115 16:48:14.587" status="PASS" endtime="20190115 16:48:14.588"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<status starttime="20190115 16:48:14.588" status="PASS" endtime="20190115 16:48:14.589"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>-------</arg>
</arguments>
<status starttime="20190115 16:48:14.589" status="PASS" endtime="20190115 16:48:14.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:14.590">jYKhrqHt3d0WF2OgYPiAtmM2TOnkpL</msg>
<status starttime="20190115 16:48:14.589" status="PASS" endtime="20190115 16:48:14.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LOWERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:14.590">smgwxoczoeibkbemuj</msg>
<status starttime="20190115 16:48:14.590" status="PASS" endtime="20190115 16:48:14.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LOWERCASE_UPPERCASE_LETTERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:14.591">VeLAgbukRJSmlonJAZIh</msg>
<status starttime="20190115 16:48:14.591" status="PASS" endtime="20190115 16:48:14.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${LETTERS_WITH_NUMBERS_RANDOM_STRING}</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:14.591">9b7a4ba87a</msg>
<status starttime="20190115 16:48:14.591" status="PASS" endtime="20190115 16:48:14.591"></status>
</kw>
<status starttime="20190115 16:48:14.572" status="PASS" endtime="20190115 16:48:14.592"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg level="INFO" timestamp="20190115 16:48:14.592">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status starttime="20190115 16:48:14.592" status="PASS" endtime="20190115 16:48:14.592"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:14.593">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status starttime="20190115 16:48:14.593" status="PASS" endtime="20190115 16:48:14.594"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/${COMPLETELY_RANDOM_STRING}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</var>
</assign>
<msg level="INFO" timestamp="20190115 16:48:15.038">Put Request using : alias=jsonplaceholder, uri=/posts/jYKhrqHt3d0WF2OgYPiAtmM2TOnkpL, data=None,                     headers=None, allow_redirects=True </msg>
<msg level="INFO" timestamp="20190115 16:48:15.038">${REQUESTS_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE} = &lt;Response [500]&gt;</msg>
<status starttime="20190115 16:48:14.594" status="PASS" endtime="20190115 16:48:15.038"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190115 16:48:15.039" status="PASS" endtime="20190115 16:48:15.039"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190115 16:48:15.040" status="PASS" endtime="20190115 16:48:15.041"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190115 16:48:15.042" status="PASS" endtime="20190115 16:48:15.042"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</arg>
</arguments>
<status starttime="20190115 16:48:15.043" status="PASS" endtime="20190115 16:48:15.044"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190115 16:48:15.044" status="PASS" endtime="20190115 16:48:15.045"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190115 16:48:15.045" status="PASS" endtime="20190115 16:48:15.046"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190115 16:48:15.046" status="PASS" endtime="20190115 16:48:15.047"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20190115 16:48:15.047">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20190115 16:48:15.047" status="PASS" endtime="20190115 16:48:15.048"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status starttime="20190115 16:48:14.570" status="PASS" endtime="20190115 16:48:15.048" critical="yes"></status>
</test>
<doc>Part Two of the robotframework-requests library examples has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add randomly generated data to a test through the "Create Various Random Test Data With The String Library" keyword.
This keyword turns the robotframework-requests library examples into an API fuzz testing tool that can run in serial or in parallel.</doc>
<status starttime="20190115 16:48:14.541" status="PASS" endtime="20190115 16:48:15.049"></status>
</suite>
<status starttime="20190115 16:48:13.839" status="PASS" endtime="20190115 16:48:15.052"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0">Regression_Tests</stat>
<stat pass="2" fail="0">Slightly_Refined_And_Room_For_Enhancements</stat>
</tag>
<suite>
<stat name="Robot Framework test run with Requests Library in serial and generate random string test data using Robot Framwork's String library" pass="2" id="s1" fail="0">Robot Framework test run with Requests Library in serial and generate random string test data using Robot Framwork's String library</stat>
<stat name="Docker-Example-Requests-Library1-Enhanced-Version" pass="1" id="s1-s1" fail="0">Robot Framework test run with Requests Library in serial and generate random string test data using Robot Framwork's String library.Docker-Example-Requests-Library1-Enhanced-Version</stat>
<stat name="Docker-Example-Requests-Library2-Enhanced-Version" pass="1" id="s1-s2" fail="0">Robot Framework test run with Requests Library in serial and generate random string test data using Robot Framwork's String library.Docker-Example-Requests-Library2-Enhanced-Version</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
