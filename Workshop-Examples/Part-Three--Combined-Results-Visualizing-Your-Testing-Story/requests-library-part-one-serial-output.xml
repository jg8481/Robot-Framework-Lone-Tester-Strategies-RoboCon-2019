<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20190114 15:35:14.471" generator="Robot 3.1.1 (Python 3.5.6 on linux)" rpa="false">
<suite id="s1" name="Robot Framework test run with Requests Library in serial">
<suite source="/rfw/Tests/Part-One--RFW-Strategies-For-Rapidly-Testing-And-Adapting-To-Frequently-Changing-Projects/Docker-Example-Requests-Library1.robot" id="s1-s1" name="Docker-Example-Requests-Library1">
<test id="s1-s1-t1" name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE ONE : Send a POST request to jsonplaceholder.typicode.com/posts and check the response.">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20190114 15:35:14.614" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status endtime="20190114 15:35:14.614" starttime="20190114 15:35:14.613" status="PASS"></status>
</kw>
<kw library="RequestsLibrary" name="Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20190114 15:35:14.615" level="INFO">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status endtime="20190114 15:35:14.616" starttime="20190114 15:35:14.615" status="PASS"></status>
</kw>
<kw library="RequestsLibrary" name="Post Request">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</var>
</assign>
<msg timestamp="20190114 15:35:15.057" level="INFO">Post Request using : alias=jsonplaceholder, uri=/posts, data=&lt;empty&gt;, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190114 15:35:15.057" level="INFO">${REQUESTS_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE} = &lt;Response [201]&gt;</msg>
<status endtime="20190114 15:35:15.058" starttime="20190114 15:35:14.616" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.059" starttime="20190114 15:35:15.058" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.060" starttime="20190114 15:35:15.059" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.062" starttime="20190114 15:35:15.061" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</arg>
</arguments>
<status endtime="20190114 15:35:15.063" starttime="20190114 15:35:15.062" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.063" starttime="20190114 15:35:15.063" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.064" starttime="20190114 15:35:15.064" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.065" starttime="20190114 15:35:15.065" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<status endtime="20190114 15:35:15.067" starttime="20190114 15:35:15.066" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.068" starttime="20190114 15:35:15.067" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.070" starttime="20190114 15:35:15.069" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.072" starttime="20190114 15:35:15.071" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20190114 15:35:15.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status endtime="20190114 15:35:15.073" starttime="20190114 15:35:15.072" status="PASS"></status>
</kw>
<kw library="Collections" name="Dictionary Should Contain Key">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status endtime="20190114 15:35:15.074" starttime="20190114 15:35:15.073" status="PASS"></status>
</kw>
<kw library="Collections" name="Get Dictionary Values">
<doc>Returns values of the given dictionary.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg timestamp="20190114 15:35:15.075" level="INFO">${POST_RESPONSE_VALUES} = [101]</msg>
<status endtime="20190114 15:35:15.075" starttime="20190114 15:35:15.074" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[101]</arg>
</arguments>
<msg timestamp="20190114 15:35:15.076" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status endtime="20190114 15:35:15.076" starttime="20190114 15:35:15.075" status="PASS"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status endtime="20190114 15:35:15.076" starttime="20190114 15:35:14.611" critical="yes" status="PASS"></status>
</test>
<test id="s1-s1-t2" name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE ONE : Send a PATCH request to &quot;title&quot; for jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20190114 15:35:15.080" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status endtime="20190114 15:35:15.080" starttime="20190114 15:35:15.079" status="PASS"></status>
</kw>
<kw library="RequestsLibrary" name="Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20190114 15:35:15.081" level="INFO">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status endtime="20190114 15:35:15.081" starttime="20190114 15:35:15.080" status="PASS"></status>
</kw>
<kw library="RequestsLibrary" name="Patch Request">
<doc>Send a PATCH request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/1</arg>
<arg>data={"title":"Testing with Robot Framework."}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20190114 15:35:15.528" level="INFO">Patch Request using : alias=jsonplaceholder, uri=/posts/1, data={"title":"Testing with Robot Framework."},                     headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190114 15:35:15.529" level="INFO">${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status endtime="20190114 15:35:15.529" starttime="20190114 15:35:15.081" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.530" starttime="20190114 15:35:15.529" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.531" starttime="20190114 15:35:15.530" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.532" starttime="20190114 15:35:15.531" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</arg>
</arguments>
<status endtime="20190114 15:35:15.533" starttime="20190114 15:35:15.533" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.534" starttime="20190114 15:35:15.534" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.535" starttime="20190114 15:35:15.534" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.536" starttime="20190114 15:35:15.536" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
</arguments>
<status endtime="20190114 15:35:15.537" starttime="20190114 15:35:15.536" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.538" starttime="20190114 15:35:15.537" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.538" starttime="20190114 15:35:15.538" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.539" starttime="20190114 15:35:15.539" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190114 15:35:15.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status endtime="20190114 15:35:15.540" starttime="20190114 15:35:15.539" status="PASS"></status>
</kw>
<kw library="Collections" name="Dictionary Should Contain Value">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status endtime="20190114 15:35:15.541" starttime="20190114 15:35:15.540" status="PASS"></status>
</kw>
<tags>
<tag>Refined_And_Room_For_More_Enhancements</tag>
<tag>Regression_Tests</tag>
</tags>
<status endtime="20190114 15:35:15.541" starttime="20190114 15:35:15.077" critical="yes" status="PASS"></status>
</test>
<test id="s1-s1-t3" name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE ONE : Send a GET request to jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20190114 15:35:15.544" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status endtime="20190114 15:35:15.544" starttime="20190114 15:35:15.543" status="PASS"></status>
</kw>
<kw library="RequestsLibrary" name="Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20190114 15:35:15.545" level="INFO">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status endtime="20190114 15:35:15.545" starttime="20190114 15:35:15.544" status="PASS"></status>
</kw>
<kw library="RequestsLibrary" name="Get Request">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/1</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</var>
</assign>
<msg timestamp="20190114 15:35:15.611" level="INFO">Get Request using : alias=jsonplaceholder, uri=/posts/1, headers={'Content-Type': 'application/json'} json=None</msg>
<msg timestamp="20190114 15:35:15.612" level="INFO">${REQUESTS_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status endtime="20190114 15:35:15.612" starttime="20190114 15:35:15.545" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.613" starttime="20190114 15:35:15.612" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.614" starttime="20190114 15:35:15.613" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.615" starttime="20190114 15:35:15.614" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</arg>
</arguments>
<status endtime="20190114 15:35:15.616" starttime="20190114 15:35:15.615" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.616" starttime="20190114 15:35:15.616" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.617" starttime="20190114 15:35:15.617" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.618" starttime="20190114 15:35:15.618" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.json()}</arg>
</arguments>
<status endtime="20190114 15:35:15.620" starttime="20190114 15:35:15.619" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.620" starttime="20190114 15:35:15.620" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.621" starttime="20190114 15:35:15.621" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:15.622" starttime="20190114 15:35:15.621" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190114 15:35:15.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status endtime="20190114 15:35:15.623" starttime="20190114 15:35:15.622" status="PASS"></status>
</kw>
<kw library="Collections" name="Dictionary Should Contain Value">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.json()}</arg>
<arg>quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto</arg>
</arguments>
<status endtime="20190114 15:35:15.624" starttime="20190114 15:35:15.623" status="PASS"></status>
</kw>
<kw library="Collections" name="Dictionary Should Not Contain Value">
<doc>Fails if ``value`` is found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status endtime="20190114 15:35:15.624" starttime="20190114 15:35:15.624" status="PASS"></status>
</kw>
<tags>
<tag>Refined_And_Room_For_More_Enhancements</tag>
<tag>Regression_Tests</tag>
</tags>
<status endtime="20190114 15:35:15.625" starttime="20190114 15:35:15.542" critical="yes" status="PASS"></status>
</test>
<test id="s1-s1-t4" name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE ONE : Send a DELETE request to jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20190114 15:35:15.627" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status endtime="20190114 15:35:15.627" starttime="20190114 15:35:15.627" status="PASS"></status>
</kw>
<kw library="RequestsLibrary" name="Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20190114 15:35:15.628" level="INFO">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status endtime="20190114 15:35:15.629" starttime="20190114 15:35:15.628" status="PASS"></status>
</kw>
<kw library="RequestsLibrary" name="Delete Request">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/1</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20190114 15:35:16.008" level="INFO">Delete Request using : alias=jsonplaceholder, uri=/posts/1, data=None,                     headers={'Content-Type': 'application/json'}, allow_redirects=True </msg>
<msg timestamp="20190114 15:35:16.008" level="INFO">${REQUESTS_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status endtime="20190114 15:35:16.008" starttime="20190114 15:35:15.629" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.009" starttime="20190114 15:35:16.009" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.010" starttime="20190114 15:35:16.010" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.012" starttime="20190114 15:35:16.011" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</arg>
</arguments>
<status endtime="20190114 15:35:16.013" starttime="20190114 15:35:16.012" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.014" starttime="20190114 15:35:16.013" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.015" starttime="20190114 15:35:16.014" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.016" starttime="20190114 15:35:16.015" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190114 15:35:16.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status endtime="20190114 15:35:16.018" starttime="20190114 15:35:16.017" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Empty">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.json()}</arg>
</arguments>
<msg timestamp="20190114 15:35:16.018" level="INFO">Length is 0</msg>
<status endtime="20190114 15:35:16.018" starttime="20190114 15:35:16.018" status="PASS"></status>
</kw>
<tags>
<tag>Refined_And_Room_For_More_Enhancements</tag>
<tag>Regression_Tests</tag>
</tags>
<status endtime="20190114 15:35:16.019" starttime="20190114 15:35:15.625" critical="yes" status="PASS"></status>
</test>
<doc>In a hypothetical scenario, where you are split between 3 or more frequently changing projects. Maybe you were able to convince your team leaders and developers
to let you try out a different and more refined approach for building out your Robot Framework regression tests. The following assumes that your team is comfortable
with looking at and contributing to a test that is mostly written using keywords from a Robot Framework test library. In this case the robotframework-requests library...</doc>
<status endtime="20190114 15:35:16.020" starttime="20190114 15:35:14.509" status="PASS"></status>
</suite>
<suite source="/rfw/Tests/Part-One--RFW-Strategies-For-Rapidly-Testing-And-Adapting-To-Frequently-Changing-Projects/Docker-Example-Requests-Library2.robot" id="s1-s2" name="Docker-Example-Requests-Library2">
<test id="s1-s2-t1" name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE TWO : Send a PUT request to jsonplaceholder.typicode.com/posts and check the response.">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20190114 15:35:16.032" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status endtime="20190114 15:35:16.032" starttime="20190114 15:35:16.031" status="PASS"></status>
</kw>
<kw library="RequestsLibrary" name="Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20190114 15:35:16.033" level="INFO">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status endtime="20190114 15:35:16.034" starttime="20190114 15:35:16.032" status="PASS"></status>
</kw>
<kw library="RequestsLibrary" name="Put Request">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/2</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PUT_RESPONSE}</var>
</assign>
<msg timestamp="20190114 15:35:16.519" level="INFO">Put Request using : alias=jsonplaceholder, uri=/posts/2, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190114 15:35:16.519" level="INFO">${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PUT_RESPONSE} = &lt;Response [200]&gt;</msg>
<status endtime="20190114 15:35:16.519" starttime="20190114 15:35:16.034" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.521" starttime="20190114 15:35:16.520" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.522" starttime="20190114 15:35:16.522" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.524" starttime="20190114 15:35:16.523" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PUT_RESPONSE}</arg>
</arguments>
<status endtime="20190114 15:35:16.525" starttime="20190114 15:35:16.524" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.526" starttime="20190114 15:35:16.526" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.527" starttime="20190114 15:35:16.527" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.528" starttime="20190114 15:35:16.528" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PUT_RESPONSE.json()}</arg>
</arguments>
<status endtime="20190114 15:35:16.529" starttime="20190114 15:35:16.529" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.530" starttime="20190114 15:35:16.530" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.531" starttime="20190114 15:35:16.531" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.532" starttime="20190114 15:35:16.532" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PUT_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190114 15:35:16.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status endtime="20190114 15:35:16.533" starttime="20190114 15:35:16.532" status="PASS"></status>
</kw>
<kw library="Collections" name="Dictionary Should Contain Key">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PUT_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status endtime="20190114 15:35:16.534" starttime="20190114 15:35:16.533" status="PASS"></status>
</kw>
<kw library="Collections" name="Get Dictionary Values">
<doc>Returns values of the given dictionary.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PUT_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${PUT_RESPONSE_VALUES}</var>
</assign>
<msg timestamp="20190114 15:35:16.535" level="INFO">${PUT_RESPONSE_VALUES} = [2]</msg>
<status endtime="20190114 15:35:16.535" starttime="20190114 15:35:16.534" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PUT_RESPONSE_VALUES}</arg>
<arg>[2]</arg>
</arguments>
<msg timestamp="20190114 15:35:16.536" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status endtime="20190114 15:35:16.536" starttime="20190114 15:35:16.535" status="PASS"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status endtime="20190114 15:35:16.536" starttime="20190114 15:35:16.030" critical="yes" status="PASS"></status>
</test>
<test id="s1-s2-t2" name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE TWO : Send a PATCH request to &quot;body&quot; for jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20190114 15:35:16.539" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status endtime="20190114 15:35:16.539" starttime="20190114 15:35:16.539" status="PASS"></status>
</kw>
<kw library="RequestsLibrary" name="Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20190114 15:35:16.540" level="INFO">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status endtime="20190114 15:35:16.541" starttime="20190114 15:35:16.540" status="PASS"></status>
</kw>
<kw library="RequestsLibrary" name="Patch Request">
<doc>Send a PATCH request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/2</arg>
<arg>data={"body":"Testing with Robot Framework."}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20190114 15:35:16.779" level="INFO">Patch Request using : alias=jsonplaceholder, uri=/posts/2, data={"body":"Testing with Robot Framework."},                     headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190114 15:35:16.779" level="INFO">${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status endtime="20190114 15:35:16.779" starttime="20190114 15:35:16.541" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.780" starttime="20190114 15:35:16.780" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.782" starttime="20190114 15:35:16.781" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.783" starttime="20190114 15:35:16.782" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</arg>
</arguments>
<status endtime="20190114 15:35:16.784" starttime="20190114 15:35:16.783" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.785" starttime="20190114 15:35:16.784" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.786" starttime="20190114 15:35:16.785" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.787" starttime="20190114 15:35:16.786" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
</arguments>
<status endtime="20190114 15:35:16.788" starttime="20190114 15:35:16.787" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.788" starttime="20190114 15:35:16.788" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.789" starttime="20190114 15:35:16.789" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.790" starttime="20190114 15:35:16.789" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190114 15:35:16.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status endtime="20190114 15:35:16.791" starttime="20190114 15:35:16.790" status="PASS"></status>
</kw>
<kw library="Collections" name="Dictionary Should Contain Value">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status endtime="20190114 15:35:16.792" starttime="20190114 15:35:16.791" status="PASS"></status>
</kw>
<tags>
<tag>Refined_And_Room_For_More_Enhancements</tag>
<tag>Regression_Tests</tag>
</tags>
<status endtime="20190114 15:35:16.792" starttime="20190114 15:35:16.537" critical="yes" status="PASS"></status>
</test>
<test id="s1-s2-t3" name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE TWO : Send a GET request to jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20190114 15:35:16.794" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status endtime="20190114 15:35:16.795" starttime="20190114 15:35:16.794" status="PASS"></status>
</kw>
<kw library="RequestsLibrary" name="Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20190114 15:35:16.795" level="INFO">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status endtime="20190114 15:35:16.796" starttime="20190114 15:35:16.795" status="PASS"></status>
</kw>
<kw library="RequestsLibrary" name="Get Request">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/2</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</var>
</assign>
<msg timestamp="20190114 15:35:16.869" level="INFO">Get Request using : alias=jsonplaceholder, uri=/posts/2, headers={'Content-Type': 'application/json'} json=None</msg>
<msg timestamp="20190114 15:35:16.869" level="INFO">${REQUESTS_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status endtime="20190114 15:35:16.870" starttime="20190114 15:35:16.796" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.871" starttime="20190114 15:35:16.870" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.872" starttime="20190114 15:35:16.871" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.873" starttime="20190114 15:35:16.872" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</arg>
</arguments>
<status endtime="20190114 15:35:16.874" starttime="20190114 15:35:16.873" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.875" starttime="20190114 15:35:16.874" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.876" starttime="20190114 15:35:16.875" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.877" starttime="20190114 15:35:16.876" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
</arguments>
<status endtime="20190114 15:35:16.878" starttime="20190114 15:35:16.877" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.878" starttime="20190114 15:35:16.878" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.879" starttime="20190114 15:35:16.879" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:16.880" starttime="20190114 15:35:16.879" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190114 15:35:16.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status endtime="20190114 15:35:16.881" starttime="20190114 15:35:16.880" status="PASS"></status>
</kw>
<kw library="Collections" name="Dictionary Should Contain Value">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>qui est esse</arg>
</arguments>
<status endtime="20190114 15:35:16.882" starttime="20190114 15:35:16.881" status="PASS"></status>
</kw>
<kw library="Collections" name="Dictionary Should Not Contain Value">
<doc>Fails if ``value`` is found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status endtime="20190114 15:35:16.883" starttime="20190114 15:35:16.882" status="PASS"></status>
</kw>
<tags>
<tag>Refined_And_Room_For_More_Enhancements</tag>
<tag>Regression_Tests</tag>
</tags>
<status endtime="20190114 15:35:16.883" starttime="20190114 15:35:16.793" critical="yes" status="PASS"></status>
</test>
<test id="s1-s2-t4" name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE TWO : Send a DELETE request to jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw library="BuiltIn" name="Create Dictionary">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg timestamp="20190114 15:35:16.885" level="INFO">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status endtime="20190114 15:35:16.885" starttime="20190114 15:35:16.885" status="PASS"></status>
</kw>
<kw library="RequestsLibrary" name="Create Session">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg timestamp="20190114 15:35:16.886" level="INFO">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status endtime="20190114 15:35:16.887" starttime="20190114 15:35:16.886" status="PASS"></status>
</kw>
<kw library="RequestsLibrary" name="Delete Request">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/2</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20190114 15:35:17.248" level="INFO">Delete Request using : alias=jsonplaceholder, uri=/posts/2, data=None,                     headers={'Content-Type': 'application/json'}, allow_redirects=True </msg>
<msg timestamp="20190114 15:35:17.249" level="INFO">${REQUESTS_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status endtime="20190114 15:35:17.249" starttime="20190114 15:35:16.887" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:17.250" starttime="20190114 15:35:17.249" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:17.251" starttime="20190114 15:35:17.251" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:17.253" starttime="20190114 15:35:17.252" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</arg>
</arguments>
<status endtime="20190114 15:35:17.254" starttime="20190114 15:35:17.254" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:17.255" starttime="20190114 15:35:17.254" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:17.256" starttime="20190114 15:35:17.256" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status endtime="20190114 15:35:17.257" starttime="20190114 15:35:17.257" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190114 15:35:17.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status endtime="20190114 15:35:17.258" starttime="20190114 15:35:17.257" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Empty">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE.json()}</arg>
</arguments>
<msg timestamp="20190114 15:35:17.259" level="INFO">Length is 0</msg>
<status endtime="20190114 15:35:17.259" starttime="20190114 15:35:17.258" status="PASS"></status>
</kw>
<tags>
<tag>Refined_And_Room_For_More_Enhancements</tag>
<tag>Regression_Tests</tag>
</tags>
<status endtime="20190114 15:35:17.259" starttime="20190114 15:35:16.883" critical="yes" status="PASS"></status>
</test>
<doc>In a hypothetical scenario, where you are split between 3 or more frequently changing projects. Maybe you were able to convince your team leaders and developers
to let you try out a different and more refined approach for building out your Robot Framework regression tests. The following assumes that your team is comfortable
with looking at and contributing to a test that is mostly written using keywords from a Robot Framework test library. In this case the robotframework-requests library...</doc>
<status endtime="20190114 15:35:17.261" starttime="20190114 15:35:16.022" status="PASS"></status>
</suite>
<status endtime="20190114 15:35:17.264" starttime="20190114 15:35:14.475" status="PASS"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="8">Critical Tests</stat>
<stat fail="0" pass="8">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="6">Refined_And_Room_For_More_Enhancements</stat>
<stat fail="0" pass="8">Regression_Tests</stat>
<stat fail="0" pass="2">Slightly_Refined_And_Room_For_Enhancements</stat>
</tag>
<suite>
<stat fail="0" pass="8" id="s1" name="Robot Framework test run with Requests Library in serial">Robot Framework test run with Requests Library in serial</stat>
<stat fail="0" pass="4" id="s1-s1" name="Docker-Example-Requests-Library1">Robot Framework test run with Requests Library in serial.Docker-Example-Requests-Library1</stat>
<stat fail="0" pass="4" id="s1-s2" name="Docker-Example-Requests-Library2">Robot Framework test run with Requests Library in serial.Docker-Example-Requests-Library2</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
