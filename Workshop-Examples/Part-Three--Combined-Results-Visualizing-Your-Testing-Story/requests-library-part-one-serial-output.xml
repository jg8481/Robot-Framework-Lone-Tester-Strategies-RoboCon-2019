<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.1 (Python 3.5.6 on linux)" generated="20190116 11:57:16.330" rpa="false">
<suite name="Robot Framework test run with Requests Library in serial" id="s1">
<suite name="Docker-Example-Requests-Library1" id="s1-s1" source="/rfw/Tests/Part-One--RFW-Strategies-For-Rapidly-Testing-And-Adapting-To-Frequently-Changing-Projects/Docker-Example-Requests-Library1.robot">
<test name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE ONE : Send a POST request to jsonplaceholder.typicode.com/posts and check the response." id="s1-s1-t1">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg level="INFO" timestamp="20190116 11:57:16.473">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status starttime="20190116 11:57:16.470" endtime="20190116 11:57:16.473" status="PASS"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 11:57:16.474">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status starttime="20190116 11:57:16.473" endtime="20190116 11:57:16.475" status="PASS"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</var>
</assign>
<msg level="INFO" timestamp="20190116 11:57:16.823">Post Request using : alias=jsonplaceholder, uri=/posts, data=&lt;empty&gt;, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg level="INFO" timestamp="20190116 11:57:16.823">${REQUESTS_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE} = &lt;Response [201]&gt;</msg>
<status starttime="20190116 11:57:16.475" endtime="20190116 11:57:16.823" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:16.824" endtime="20190116 11:57:16.824" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:16.825" endtime="20190116 11:57:16.825" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:16.826" endtime="20190116 11:57:16.826" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</arg>
</arguments>
<status starttime="20190116 11:57:16.827" endtime="20190116 11:57:16.827" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:16.828" endtime="20190116 11:57:16.828" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:16.829" endtime="20190116 11:57:16.829" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:16.829" endtime="20190116 11:57:16.830" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<status starttime="20190116 11:57:16.830" endtime="20190116 11:57:16.831" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:16.831" endtime="20190116 11:57:16.831" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:16.832" endtime="20190116 11:57:16.832" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:16.832" endtime="20190116 11:57:16.833" status="PASS"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.status_code}</arg>
<arg>201</arg>
</arguments>
<msg level="INFO" timestamp="20190116 11:57:16.834">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20190116 11:57:16.833" endtime="20190116 11:57:16.834" status="PASS"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status starttime="20190116 11:57:16.834" endtime="20190116 11:57:16.835" status="PASS"></status>
</kw>
<kw name="Get Dictionary Values" library="Collections">
<doc>Returns values of the given dictionary.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg level="INFO" timestamp="20190116 11:57:16.835">${POST_RESPONSE_VALUES} = [101]</msg>
<status starttime="20190116 11:57:16.835" endtime="20190116 11:57:16.836" status="PASS"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[101]</arg>
</arguments>
<msg level="INFO" timestamp="20190116 11:57:16.836">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20190116 11:57:16.836" endtime="20190116 11:57:16.836" status="PASS"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status starttime="20190116 11:57:16.469" endtime="20190116 11:57:16.837" critical="yes" status="PASS"></status>
</test>
<test name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE ONE : Send a PATCH request to &quot;title&quot; for jsonplaceholder.typicode.com/posts/1 and check the response." id="s1-s1-t2">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg level="INFO" timestamp="20190116 11:57:16.839">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status starttime="20190116 11:57:16.838" endtime="20190116 11:57:16.839" status="PASS"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 11:57:16.840">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status starttime="20190116 11:57:16.839" endtime="20190116 11:57:16.840" status="PASS"></status>
</kw>
<kw name="Patch Request" library="RequestsLibrary">
<doc>Send a PATCH request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/1</arg>
<arg>data={"title":"Testing with Robot Framework."}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</var>
</assign>
<msg level="INFO" timestamp="20190116 11:57:17.450">Patch Request using : alias=jsonplaceholder, uri=/posts/1, data={"title":"Testing with Robot Framework."},                     headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg level="INFO" timestamp="20190116 11:57:17.451">${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status starttime="20190116 11:57:16.841" endtime="20190116 11:57:17.451" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.451" endtime="20190116 11:57:17.452" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.454" endtime="20190116 11:57:17.454" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.455" endtime="20190116 11:57:17.455" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</arg>
</arguments>
<status starttime="20190116 11:57:17.456" endtime="20190116 11:57:17.457" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.457" endtime="20190116 11:57:17.458" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.458" endtime="20190116 11:57:17.459" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.459" endtime="20190116 11:57:17.459" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
</arguments>
<status starttime="20190116 11:57:17.460" endtime="20190116 11:57:17.460" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.461" endtime="20190116 11:57:17.461" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.462" endtime="20190116 11:57:17.462" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.462" endtime="20190116 11:57:17.463" status="PASS"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20190116 11:57:17.464">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20190116 11:57:17.463" endtime="20190116 11:57:17.464" status="PASS"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status starttime="20190116 11:57:17.464" endtime="20190116 11:57:17.465" status="PASS"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status starttime="20190116 11:57:16.837" endtime="20190116 11:57:17.465" critical="yes" status="PASS"></status>
</test>
<test name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE ONE : Send a GET request to jsonplaceholder.typicode.com/posts/1 and check the response." id="s1-s1-t3">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg level="INFO" timestamp="20190116 11:57:17.468">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status starttime="20190116 11:57:17.468" endtime="20190116 11:57:17.469" status="PASS"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 11:57:17.469">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status starttime="20190116 11:57:17.469" endtime="20190116 11:57:17.470" status="PASS"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/1</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</var>
</assign>
<msg level="INFO" timestamp="20190116 11:57:17.514">Get Request using : alias=jsonplaceholder, uri=/posts/1, headers={'Content-Type': 'application/json'} json=None</msg>
<msg level="INFO" timestamp="20190116 11:57:17.515">${REQUESTS_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status starttime="20190116 11:57:17.470" endtime="20190116 11:57:17.515" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.515" endtime="20190116 11:57:17.515" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.516" endtime="20190116 11:57:17.517" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.517" endtime="20190116 11:57:17.518" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</arg>
</arguments>
<status starttime="20190116 11:57:17.518" endtime="20190116 11:57:17.519" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.519" endtime="20190116 11:57:17.519" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.520" endtime="20190116 11:57:17.520" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.521" endtime="20190116 11:57:17.522" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.json()}</arg>
</arguments>
<status starttime="20190116 11:57:17.522" endtime="20190116 11:57:17.523" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.524" endtime="20190116 11:57:17.524" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.525" endtime="20190116 11:57:17.525" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.525" endtime="20190116 11:57:17.526" status="PASS"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20190116 11:57:17.527">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20190116 11:57:17.526" endtime="20190116 11:57:17.527" status="PASS"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.json()}</arg>
<arg>quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto</arg>
</arguments>
<status starttime="20190116 11:57:17.527" endtime="20190116 11:57:17.528" status="PASS"></status>
</kw>
<kw name="Dictionary Should Not Contain Value" library="Collections">
<doc>Fails if ``value`` is found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status starttime="20190116 11:57:17.528" endtime="20190116 11:57:17.529" status="PASS"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status starttime="20190116 11:57:17.467" endtime="20190116 11:57:17.529" critical="yes" status="PASS"></status>
</test>
<test name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE ONE : Send a DELETE request to jsonplaceholder.typicode.com/posts/1 and check the response." id="s1-s1-t4">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg level="INFO" timestamp="20190116 11:57:17.532">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status starttime="20190116 11:57:17.532" endtime="20190116 11:57:17.533" status="PASS"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 11:57:17.533">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status starttime="20190116 11:57:17.533" endtime="20190116 11:57:17.534" status="PASS"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/1</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</var>
</assign>
<msg level="INFO" timestamp="20190116 11:57:17.869">Delete Request using : alias=jsonplaceholder, uri=/posts/1, data=None,                     headers={'Content-Type': 'application/json'}, allow_redirects=True </msg>
<msg level="INFO" timestamp="20190116 11:57:17.869">${REQUESTS_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status starttime="20190116 11:57:17.534" endtime="20190116 11:57:17.869" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.869" endtime="20190116 11:57:17.870" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.871" endtime="20190116 11:57:17.871" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.872" endtime="20190116 11:57:17.872" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</arg>
</arguments>
<status starttime="20190116 11:57:17.873" endtime="20190116 11:57:17.874" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.874" endtime="20190116 11:57:17.875" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.875" endtime="20190116 11:57:17.875" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:17.876" endtime="20190116 11:57:17.876" status="PASS"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20190116 11:57:17.877">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20190116 11:57:17.877" endtime="20190116 11:57:17.877" status="PASS"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.json()}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 11:57:17.878">Length is 0</msg>
<status starttime="20190116 11:57:17.878" endtime="20190116 11:57:17.878" status="PASS"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status starttime="20190116 11:57:17.531" endtime="20190116 11:57:17.879" critical="yes" status="PASS"></status>
</test>
<doc>In a hypothetical scenario, where you are split between 3 or more frequently changing projects. Maybe you were able to convince your team leaders and developers
to let you try out a different and more refined approach for building out your Robot Framework regression tests. The following assumes that your team is comfortable
with looking at and contributing to a test that is mostly written using keywords from a Robot Framework test library. In this case the robotframework-requests library...</doc>
<status starttime="20190116 11:57:16.368" endtime="20190116 11:57:17.880" status="PASS"></status>
</suite>
<suite name="Docker-Example-Requests-Library2" id="s1-s2" source="/rfw/Tests/Part-One--RFW-Strategies-For-Rapidly-Testing-And-Adapting-To-Frequently-Changing-Projects/Docker-Example-Requests-Library2.robot">
<test name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE TWO : Send a PUT request to jsonplaceholder.typicode.com/posts and check the response." id="s1-s2-t1">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg level="INFO" timestamp="20190116 11:57:17.892">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status starttime="20190116 11:57:17.892" endtime="20190116 11:57:17.892" status="PASS"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 11:57:17.893">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status starttime="20190116 11:57:17.892" endtime="20190116 11:57:17.894" status="PASS"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/2</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PUT_RESPONSE}</var>
</assign>
<msg level="INFO" timestamp="20190116 11:57:18.505">Put Request using : alias=jsonplaceholder, uri=/posts/2, data=None,                     headers=None, allow_redirects=True </msg>
<msg level="INFO" timestamp="20190116 11:57:18.506">${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PUT_RESPONSE} = &lt;Response [200]&gt;</msg>
<status starttime="20190116 11:57:17.894" endtime="20190116 11:57:18.506" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.506" endtime="20190116 11:57:18.507" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.508" endtime="20190116 11:57:18.508" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.509" endtime="20190116 11:57:18.509" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PUT_RESPONSE}</arg>
</arguments>
<status starttime="20190116 11:57:18.510" endtime="20190116 11:57:18.511" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.511" endtime="20190116 11:57:18.512" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.512" endtime="20190116 11:57:18.512" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.513" endtime="20190116 11:57:18.513" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PUT_RESPONSE.json()}</arg>
</arguments>
<status starttime="20190116 11:57:18.513" endtime="20190116 11:57:18.514" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.514" endtime="20190116 11:57:18.515" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.515" endtime="20190116 11:57:18.515" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.516" endtime="20190116 11:57:18.516" status="PASS"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PUT_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20190116 11:57:18.517">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20190116 11:57:18.516" endtime="20190116 11:57:18.517" status="PASS"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PUT_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status starttime="20190116 11:57:18.517" endtime="20190116 11:57:18.518" status="PASS"></status>
</kw>
<kw name="Get Dictionary Values" library="Collections">
<doc>Returns values of the given dictionary.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PUT_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${PUT_RESPONSE_VALUES}</var>
</assign>
<msg level="INFO" timestamp="20190116 11:57:18.519">${PUT_RESPONSE_VALUES} = [2]</msg>
<status starttime="20190116 11:57:18.518" endtime="20190116 11:57:18.519" status="PASS"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PUT_RESPONSE_VALUES}</arg>
<arg>[2]</arg>
</arguments>
<msg level="INFO" timestamp="20190116 11:57:18.520">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20190116 11:57:18.519" endtime="20190116 11:57:18.520" status="PASS"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status starttime="20190116 11:57:17.890" endtime="20190116 11:57:18.520" critical="yes" status="PASS"></status>
</test>
<test name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE TWO : Send a PATCH request to &quot;body&quot; for jsonplaceholder.typicode.com/posts/2 and check the response." id="s1-s2-t2">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg level="INFO" timestamp="20190116 11:57:18.522">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status starttime="20190116 11:57:18.521" endtime="20190116 11:57:18.522" status="PASS"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 11:57:18.523">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status starttime="20190116 11:57:18.522" endtime="20190116 11:57:18.523" status="PASS"></status>
</kw>
<kw name="Patch Request" library="RequestsLibrary">
<doc>Send a PATCH request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/2</arg>
<arg>data={"body":"Testing with Robot Framework."}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</var>
</assign>
<msg level="INFO" timestamp="20190116 11:57:18.911">Patch Request using : alias=jsonplaceholder, uri=/posts/2, data={"body":"Testing with Robot Framework."},                     headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg level="INFO" timestamp="20190116 11:57:18.911">${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status starttime="20190116 11:57:18.523" endtime="20190116 11:57:18.911" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.912" endtime="20190116 11:57:18.913" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.913" endtime="20190116 11:57:18.914" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.914" endtime="20190116 11:57:18.915" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</arg>
</arguments>
<status starttime="20190116 11:57:18.915" endtime="20190116 11:57:18.916" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.916" endtime="20190116 11:57:18.916" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.917" endtime="20190116 11:57:18.917" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.918" endtime="20190116 11:57:18.918" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
</arguments>
<status starttime="20190116 11:57:18.918" endtime="20190116 11:57:18.919" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.919" endtime="20190116 11:57:18.920" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.920" endtime="20190116 11:57:18.921" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.921" endtime="20190116 11:57:18.921" status="PASS"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20190116 11:57:18.922">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20190116 11:57:18.922" endtime="20190116 11:57:18.922" status="PASS"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status starttime="20190116 11:57:18.923" endtime="20190116 11:57:18.923" status="PASS"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status starttime="20190116 11:57:18.520" endtime="20190116 11:57:18.923" critical="yes" status="PASS"></status>
</test>
<test name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE TWO : Send a GET request to jsonplaceholder.typicode.com/posts/2 and check the response." id="s1-s2-t3">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg level="INFO" timestamp="20190116 11:57:18.926">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status starttime="20190116 11:57:18.925" endtime="20190116 11:57:18.926" status="PASS"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 11:57:18.926">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status starttime="20190116 11:57:18.926" endtime="20190116 11:57:18.927" status="PASS"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/2</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</var>
</assign>
<msg level="INFO" timestamp="20190116 11:57:18.959">Get Request using : alias=jsonplaceholder, uri=/posts/2, headers={'Content-Type': 'application/json'} json=None</msg>
<msg level="INFO" timestamp="20190116 11:57:18.959">${REQUESTS_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status starttime="20190116 11:57:18.927" endtime="20190116 11:57:18.959" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.959" endtime="20190116 11:57:18.960" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.960" endtime="20190116 11:57:18.961" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.961" endtime="20190116 11:57:18.961" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</arg>
</arguments>
<status starttime="20190116 11:57:18.962" endtime="20190116 11:57:18.962" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.963" endtime="20190116 11:57:18.963" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.963" endtime="20190116 11:57:18.964" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.964" endtime="20190116 11:57:18.965" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
</arguments>
<status starttime="20190116 11:57:18.965" endtime="20190116 11:57:18.966" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.966" endtime="20190116 11:57:18.967" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.967" endtime="20190116 11:57:18.967" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:18.968" endtime="20190116 11:57:18.968" status="PASS"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20190116 11:57:18.969">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20190116 11:57:18.969" endtime="20190116 11:57:18.970" status="PASS"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>qui est esse</arg>
</arguments>
<status starttime="20190116 11:57:18.970" endtime="20190116 11:57:18.971" status="PASS"></status>
</kw>
<kw name="Dictionary Should Not Contain Value" library="Collections">
<doc>Fails if ``value`` is found from ``dictionary``.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status starttime="20190116 11:57:18.971" endtime="20190116 11:57:18.972" status="PASS"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status starttime="20190116 11:57:18.924" endtime="20190116 11:57:18.972" critical="yes" status="PASS"></status>
</test>
<test name="REQUESTS LIBRARY EXAMPLE PART ONE - ROBOT FILE TWO : Send a DELETE request to jsonplaceholder.typicode.com/posts/2 and check the response." id="s1-s2-t4">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${HEADERS}</var>
</assign>
<msg level="INFO" timestamp="20190116 11:57:18.975">${HEADERS} = {'Content-Type': 'application/json'}</msg>
<status starttime="20190116 11:57:18.974" endtime="20190116 11:57:18.975" status="PASS"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>http://${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 11:57:18.976">Creating Session using : alias=jsonplaceholder, url=http://jsonplaceholder.typicode.com, headers={'Content-Type': 'application/json'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status starttime="20190116 11:57:18.975" endtime="20190116 11:57:18.976" status="PASS"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>jsonplaceholder</arg>
<arg>/posts/2</arg>
<arg>headers=${HEADERS}</arg>
</arguments>
<assign>
<var>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</var>
</assign>
<msg level="INFO" timestamp="20190116 11:57:19.437">Delete Request using : alias=jsonplaceholder, uri=/posts/2, data=None,                     headers={'Content-Type': 'application/json'}, allow_redirects=True </msg>
<msg level="INFO" timestamp="20190116 11:57:19.438">${REQUESTS_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status starttime="20190116 11:57:18.977" endtime="20190116 11:57:19.438" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:19.438" endtime="20190116 11:57:19.439" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:19.439" endtime="20190116 11:57:19.440" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:19.441" endtime="20190116 11:57:19.441" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</arg>
</arguments>
<status starttime="20190116 11:57:19.442" endtime="20190116 11:57:19.443" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:19.443" endtime="20190116 11:57:19.444" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:19.444" endtime="20190116 11:57:19.445" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status starttime="20190116 11:57:19.445" endtime="20190116 11:57:19.446" status="PASS"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg level="INFO" timestamp="20190116 11:57:19.447">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20190116 11:57:19.446" endtime="20190116 11:57:19.447" status="PASS"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${REQUESTS_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE.json()}</arg>
</arguments>
<msg level="INFO" timestamp="20190116 11:57:19.447">Length is 0</msg>
<status starttime="20190116 11:57:19.447" endtime="20190116 11:57:19.448" status="PASS"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status starttime="20190116 11:57:18.973" endtime="20190116 11:57:19.448" critical="yes" status="PASS"></status>
</test>
<doc>In a hypothetical scenario, where you are split between 3 or more frequently changing projects. Maybe you were able to convince your team leaders and developers
to let you try out a different and more refined approach for building out your Robot Framework regression tests. The following assumes that your team is comfortable
with looking at and contributing to a test that is mostly written using keywords from a Robot Framework test library. In this case the robotframework-requests library...</doc>
<status starttime="20190116 11:57:17.883" endtime="20190116 11:57:19.449" status="PASS"></status>
</suite>
<status starttime="20190116 11:57:16.332" endtime="20190116 11:57:19.453" status="PASS"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="8">Critical Tests</stat>
<stat fail="0" pass="8">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="8">Regression_Tests</stat>
<stat fail="0" pass="8">Slightly_Refined_And_Room_For_Enhancements</stat>
</tag>
<suite>
<stat fail="0" name="Robot Framework test run with Requests Library in serial" id="s1" pass="8">Robot Framework test run with Requests Library in serial</stat>
<stat fail="0" name="Docker-Example-Requests-Library1" id="s1-s1" pass="4">Robot Framework test run with Requests Library in serial.Docker-Example-Requests-Library1</stat>
<stat fail="0" name="Docker-Example-Requests-Library2" id="s1-s2" pass="4">Robot Framework test run with Requests Library in serial.Docker-Example-Requests-Library2</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
